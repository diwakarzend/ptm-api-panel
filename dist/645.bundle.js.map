{"version":3,"file":"645.bundle.js","mappings":"wzBAIA,IAAMA,EAAkBC,OAAOC,OAAO,CACpCC,SAAU,GACVC,SAAU,GACVC,IAAK,aACLC,MAAO,GACPC,UAAW,GACXC,SAAU,GACVC,QAAS,KACTC,SAAU,GACVC,IAAK,GACLC,SAAU,GACVC,YAAa,GACbC,QAAS,GACTC,SAAU,GACVC,KAAM,GACNC,SAAU,EACVC,SAAU,KAuTZ,QApToB,SAACC,GACnB,IAAQC,EACND,EADMC,aAA4BC,GAClCF,EADoBG,aACpBH,EADkCE,mBAAmBE,EACrDJ,EADqDI,eAEvD,GAAmCC,EAAAA,EAAAA,UAASxB,GAA5C,eAAOyB,EAAP,KAAiBC,EAAjB,KACA,GAA2CF,EAAAA,EAAAA,UAASxB,GAApD,eACA,GADA,WAC8BwB,EAAAA,EAAAA,UAAS,KAAvC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAiCJ,EAAAA,EAAAA,UAAS,IAA1C,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACJX,GACFM,EAAe,EAAD,GACTN,MAGN,CAACA,IAEJ,IAAMY,EAAe,SAACC,GACpBP,EAAe,EAAD,KACTD,GADS,cAEXQ,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,MAAMC,WAStCC,EAAe,SAACC,GAEpB,IAAMZ,EAAS,GACXY,GAAyB,KAAhBA,EAAMC,QACbD,EAAME,aAAeF,EAAME,uBAAuBC,OACpDH,EAAME,YAAYE,SAAQ,SAACC,GAAD,OACxBjB,EAAOkB,KAAP,UAAeD,EAAKE,MAApB,aAA8BF,EAAKG,aAGnCpB,EAAOqB,OAAS,IAClBpB,EAAYD,GACZsB,OAAOC,SAAS,IAAK,OAEdX,GAAyB,KAAhBA,EAAMC,SACxBZ,EAAY,CAACW,EAAMA,QACnBU,OAAOC,SAAS,IAAK,OAInBC,EAAiB,SAACC,GACjBA,EAAKvB,SAGRD,EAAY,IACZE,EAAcsB,EAAKC,KACnBhC,KACAiC,EAAAA,EAAAA,MACA/B,KANAK,EAAY,CAACwB,EAAKC,OAyBlBE,EAAY,GACZC,EAAc,GACdC,EAAgB,GAgBpB,OAfI9B,EAAOqB,OAAS,GAClBO,EAAY5B,EAAO+B,KAAI,SAACC,GAAD,OAAS,sBAAIC,IAAKD,GAAMA,MAC/CH,EAAc,CACZK,MAAO,MACPC,SAAU,OACVC,UAAW,SAGbN,EAAgB,CACdI,MAAO,QACPC,SAAU,OACVC,UAAW,QAKb,uBACEC,UAAS,wBACTC,GAAG,eACHC,SAAS,KACTlD,KAAK,SACL,kBAAgB,gBAChBmD,MAAO,CAAEC,QAAS,QAASC,aAAc,SAEzC,uBAAKL,UAAU,eAAehD,KAAK,YACjC,uBAAKgD,UAAU,iBACb,uBAAKA,UAAU,gBACb,sBAAIA,UAAU,cAAcC,GAAG,qBAA/B,YAGA,0BACEK,KAAK,SACLN,UAAU,QACV,eAAa,QACb,aAAW,QACXO,QAASlD,GAET,wBAAM,cAAY,QAAlB,OAIJ,uBAAK2C,UAAU,cACb,wBAAMQ,SA5DU,SAACvC,GAYzB,OAXAA,EAAMwC,iBAEFrD,GAtCQ,IAAIsD,EAAAA,EAAQ,GAAIvB,EAAgBb,GAAc,GAC/CqC,KAAJ,UAAYC,EAAAA,EAAAA,MAAAA,UAAZ,OAAkCA,EAAAA,EAAAA,KAAAA,aAAyBnD,GAyClEA,EAASP,SAAWO,EAASZ,YAIjB,IAAI6D,EAAAA,EAAQ,GAAIvB,EAAgBb,GAAc,GAC/CqC,KAAKC,EAAAA,EAAAA,MAAAA,SAAsBA,EAAAA,EAAAA,KAAAA,gBAA2BnD,KAiDvD,uBAAKuC,UAAU,OACb,uBAAKA,UAAU,aACb,uBAAKA,UAAU,cACb,yBAAOa,IAAI,sBAAX,cACA,yBACEP,KAAK,OACLN,UAAU,eACVc,YAAY,aACZ3C,KAAK,YACLC,MAAOX,GAAYA,EAASlB,UAC5BwE,SAAU/C,MAIhB,uBAAKgC,UAAU,aACb,uBAAKA,UAAU,cACb,yBAAOa,IAAI,sBAAX,aACA,yBACEP,KAAK,OACLN,UAAU,eACVc,YAAY,YACZ3C,KAAK,WACLC,MAAOX,GAAYA,EAASf,SAC5BqE,SAAU/C,MAKhB,uBAAKgC,UAAU,aACb,uBAAKA,UAAU,cACb,yBAAOa,IAAI,sBAAX,YACA,yBACEP,KAAK,OACLN,UAAU,eACVc,YAAY,WACZ3C,KAAK,WACLC,MAAOX,GAAYA,EAAStB,SAC5B6E,UAAQ,EACRD,SAAU/C,MAIhB,uBAAKgC,UAAU,aACb,uBAAKA,UAAU,cACb,yBAAOa,IAAI,sBAAX,YACA,yBACEP,KAAK,OACLN,UAAU,eACVc,YAAY,WACZ3C,KAAK,WACLC,MAAOX,GAAYA,EAASrB,SAC5B2E,SAAU/C,MAKhB,uBAAKgC,UAAU,aACb,uBAAKA,UAAU,cACb,yBAAOa,IAAI,sBAAX,aACA,yBACEP,KAAK,OACLN,UAAU,eACVc,YAAY,YACZ3C,KAAK,WACLC,MAAOX,GAAYA,EAASjB,SAC5BuE,SAAU/C,MAKhB,uBAAKgC,UAAU,aACb,uBAAKA,UAAU,cACb,yBAAOa,IAAI,sBAAX,YACA,yBACEP,KAAK,SACLN,UAAU,eACVc,YAAY,WACZ3C,KAAK,UACLC,MAAOX,GAAYA,EAASX,QAC5BkE,UAAQ,EACRD,SAAU/C,MAKhB,uBAAKgC,UAAU,aACb,uBAAKA,UAAU,cACb,yBAAOa,IAAI,sBAAX,YACA,yBACEP,KAAK,QACLN,UAAU,eACVc,YAAY,WACZ3C,KAAK,QACLC,MAAOX,GAAYA,EAASnB,MAC5B0E,UAAQ,EACRD,SAAU/C,MAIhB,uBAAKgC,UAAU,aACb,uBAAKA,UAAU,cACb,yBAAOa,IAAI,sBAAX,OACA,yBACEP,KAAK,OACLN,UAAU,eACV7B,KAAK,MACLC,MAAOX,GAAYA,EAASpB,IAC5B4E,IAAI,aACJC,IAAI,aACJH,SAAU/C,MAKhB,uBAAKgC,UAAU,aACb,uBAAKA,UAAU,cACb,yBAAOa,IAAI,sBAAX,UACA,yBACEP,KAAK,SACLN,UAAU,eACVc,YAAY,SACZ3C,KAAK,cACLC,MAAOX,GAAYA,EAASZ,YAC5BmE,UAAQ,EACRD,SAAU/C,MAIhB,uBAAKgC,UAAU,aACb,uBAAKA,UAAU,cACb,yBAAOa,IAAI,sBAAX,YACA,yBACEP,KAAK,WACLN,UAAU,eACVc,YAAY,WACZ3C,KAAK,WACL6C,UAAQ,EACRD,SAAU/C,MAKhB,uBAAKgC,UAAU,aACb,uBAAKA,UAAU,cACb,yBAAOa,IAAI,6BAAX,aACA,0BACEb,UAAU,eACV7B,KAAK,OACL6C,UAAQ,EACRD,SAAU/C,GAEV,0BAAQI,MAAM,IAAd,eACA,0BAAQA,MAAM,cAAd,UACA,0BAAQA,MAAM,iBAAd,iBAKR,uBAAK4B,UAAU,gBACb,0BACEM,KAAK,SACLN,UAAU,uCACV,eAAa,QACbO,QAASlD,GAJX,SAQA,0BAAQiD,KAAK,SAASN,UAAU,4BAC7B5C,EAAe,cAAgB,cAGpC,2BACGmC,GAAaC,EACZ,sBAAIW,MAAOX,GAAcD,GACvB1B,GAAW4B,EACb,uBAAKU,MAAOV,GAAgB5B,GAE5B,U,4OCvTlB,IAAMsD,EAAc,CAClBC,WAAY,SACZC,UAAW,QACXC,cAAe,aA4KjB,SAAeC,EAAAA,EAAAA,KANS,SAACC,GACvB,O,qWAAA,IACKA,KAIP,EAzKc,SAACrE,GACb,OAAsCK,EAAAA,EAAAA,WAAS,GAA/C,eAAOiE,EAAP,KAAuBC,EAAvB,KACA,GAAkClE,EAAAA,EAAAA,UAAS,IAA3C,eAAOF,EAAP,KAAqBqE,EAArB,KACA,GAAwCnE,EAAAA,EAAAA,UAAS,IAAjD,eAAOJ,EAAP,KAAqBwE,EAArB,KACQC,EAAa1E,EAAb0E,SAEFtE,EAAiB,WACrBsE,GAASC,EAAAA,EAAAA,SAGX/D,EAAAA,EAAAA,YAAU,WACRR,MACC,IAEH,IA4BQwE,EAAU5E,EAAV4E,MAEFC,EAAWD,GAASA,EAAME,WAAaF,EAAME,UAAU7C,KAE7D,OACE,uBAAKY,UAAU,kBACb,gBAACkC,EAAA,EAAY/E,GACb,uBAAK6C,UAAU,mBACb,uBAAKA,UAAU,mBACb,gBAACmC,EAAA,EAAD,CAAYC,QAAQ,QAAQhE,MAAM,UAClC,uBAAK4B,UAAU,OACb,uBAAKA,UAAU,cACb,uBAAKA,UAAU,yBACb,uBAAKA,UAAU,0BACb,uBAAKA,UAAU,cAAf,KACA,0BACEM,KAAK,SACLN,UAAU,aACV,cAAY,QACZ,cAAY,gBACZO,QA/BO,WACvB8B,SAASC,KAAKC,UAAUC,IAAI,cAC5Bd,GAAY,KAwBE,YASCD,EACC,gBAAC,EAAD,CACEpE,kBAhCM,WACxBuE,EAAgB,IAChBS,SAASC,KAAKC,UAAUE,OAAO,cAC/Bf,GAAY,IA8BMnE,eAAgBA,EAChBJ,MAAOA,EACPC,aAAcA,EACdE,aAAcA,IAGhB,IAGJ,uBAAK0C,UAAU,eACb,uBAAKA,UAAU,cACb,uBACEA,UAAU,YACVhD,KAAK,QACL,aAAW,iBAEX,0BAAQsD,KAAK,SAASN,UAAU,cAAhC,QAGA,0BAAQM,KAAK,SAASN,UAAU,cAAhC,OAGA,0BAAQM,KAAK,SAASN,UAAU,cAAhC,SAGA,0BAAQM,KAAK,SAASN,UAAU,cAAhC,OAGA,0BAAQM,KAAK,SAASN,UAAU,cAAhC,YAMN,uBAAKA,UAAU,aACb,yBACEC,GAAG,YACHD,UAAU,sCAEV,6BACE,0BACE,gCACA,0CACA,oCACA,mCACA,kCACA,oCACA,sCAIJ,6BACGgC,GAAYtD,MAAMgE,QAAQV,GACvBA,EAAStC,KAAI,SAACd,EAAM+D,GAClB,IAAIC,EAAY,GAOhB,OANIhE,EAAK5B,MAAQmE,EAAYvC,EAAK5B,QAChC4F,EAAYzB,EAAYvC,EAAK5B,MAC1B6F,cACAC,QAAQ,IAAK,MAIhB,sBAAIlD,IAAKhB,EAAK1B,UACZ,0BAAKyF,EAAQ,GACb,oCAAQ/D,EAAKrC,UAAb,YAA0BqC,EAAKlC,WAC/B,0BAAKkC,EAAK1B,UACV,0BAAK0B,EAAKtC,OACV,sBAAI0D,UAAW4C,GACZzB,EAAYvC,EAAK5B,OAAS,MAE7B,sBAAIgD,UAAU,QAAd,UACA,sBACEO,QAAS,kBA/HfwC,EAgIyBnE,EAAK1B,SA/HtDwE,GAAY,GACZC,EAAUoB,GASM,IAAIrC,EAAAA,EAAQ,IARL,SAACsC,EAAUC,GACR,GAApBD,EAASnF,SACX+D,EAAgBoB,EAAS5D,SAIR,SAACb,OAEwC,GAC/C2E,IAAR,UACFC,EAAAA,EAAAA,MAAAA,UADE,OACoBA,EAAAA,EAAAA,KAAAA,UAAAA,QAA4B,WAAYJ,KAb5C,IAACA,IA8HI,YAUN","sources":["webpack://react-boiler-plate/./src/Pages/Users/AddUserForm.js","webpack://react-boiler-plate/./src/Pages/Users/Users.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Request from \"../../utils/Request\";\nimport urls from \"../../utils/urls\";\nimport { removeOverlay } from \"../../utils/common\";\nconst initialFormData = Object.freeze({\n  address1: \"\",\n  address2: \"\",\n  dob: \"1985-12-07\",\n  email: \"\",\n  firstName: \"\",\n  landmark: \"\",\n  langKey: \"en\",\n  lastName: \"\",\n  otp: \"\",\n  password: \"\",\n  phoneNumber: \"\",\n  pincode: \"\",\n  qrCodeId: \"\",\n  role: \"\",\n  tenantId: 0,\n  userName: \"\",\n});\n\nconst AddUserForm = (props) => {\n  const { editUserData, userToBeEdit, closePopUpHandler, fetchUsersData } =\n    props;\n  const [formData, updateFormData] = useState(initialFormData);\n  const [editFormData, updateEditFormData] = useState(initialFormData);\n  const [errors, updateError] = useState([]);\n  const [success, updateSuccess] = useState(\"\");\n\n  useEffect(() => {\n    if (editUserData) {\n      updateFormData({\n        ...editUserData,\n      });\n    }\n  }, [editUserData]);\n\n  const handleChange = (event) => {\n    updateFormData({\n      ...formData,\n      [event.target.name]: event.target.value.trim(),\n    });\n  };\n\n  const updateUser = () => {\n    const api = new Request(\"\", successHandler, errorHandler, false);\n    return api.post(`${urls.login.BASE_URL}${urls.User.UPDATE_USER}`, formData);\n  };\n\n  const errorHandler = (error) => {\n    // {\"timestamp\":\"2021-09-18T06:25:35.505+00:00\",\"status\":401,\"error\":\"Unauthorized\",\"message\":\"\",\"path\":\"/api/users\"}\n    const errors = [];\n    if (error && error.status == 400) {\n      if (error.fieldErrors && error.fieldErrors instanceof Array) {\n        error.fieldErrors.forEach((item) =>\n          errors.push(`${item.field}: ${item.message}`)\n        );\n      }\n      if (errors.length > 0) {\n        updateError(errors);\n        window.scrollTo(100, 100);\n      }\n    } else if (error && error.status == 401) {\n      updateError([error.error]);\n      window.scrollTo(100, 100);\n    }\n  };\n\n  const successHandler = (data) => {\n    if (!data.success) {\n      updateError([data.msg]);\n    } else {\n      updateError([]);\n      updateSuccess(data.msg);\n      closePopUpHandler();\n      removeOverlay();\n      fetchUsersData();\n    }\n  };\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    if (editUserData) {\n      updateUser();\n    }\n\n    formData.userName = formData.phoneNumber;\n\n    // pricingToken;\n\n    const api = new Request(\"\", successHandler, errorHandler, false);\n    return api.post(urls.login.BASE_URL + urls.User.CREATE_NEW_USER, formData);\n  };\n\n  let errorHTML = \"\";\n  let errorStyles = \"\";\n  let successStyles = \"\";\n  if (errors.length > 0) {\n    errorHTML = errors.map((val) => <li key={val}>{val}</li>);\n    errorStyles = {\n      color: \"red\",\n      fontSize: \"14px\",\n      marginTop: \"26px\",\n    };\n  } else {\n    successStyles = {\n      color: \"green\",\n      fontSize: \"14px\",\n      marginTop: \"26px\",\n    };\n  }\n\n  return (\n    <div\n      className={`modal right fade show`}\n      id=\"exampleModal\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel2\"\n      style={{ display: \"block\", paddingRight: \"15px\" }}\n    >\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n              Add User\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={closePopUpHandler}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n\n          <div className=\"modal-body\">\n            <form onSubmit={submitFormHandler}>\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"form-group\">\n                    <label for=\"exampleInputEmail1\">First Name</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"First Name\"\n                      name=\"firstName\"\n                      value={formData && formData.firstName}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-12\">\n                  <div className=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Last Name</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Last Name\"\n                      name=\"lastName\"\n                      value={formData && formData.lastName}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-12\">\n                  <div className=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Address1</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Address1\"\n                      name=\"address1\"\n                      value={formData && formData.address1}\n                      required\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-12\">\n                  <div className=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Address2</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Address2\"\n                      name=\"address2\"\n                      value={formData && formData.address2}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-12\">\n                  <div className=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Land Mark</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Land Mark\"\n                      name=\"landmark\"\n                      value={formData && formData.landmark}\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-12\">\n                  <div className=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Pin Code</label>\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      placeholder=\"Pin Code\"\n                      name=\"pincode\"\n                      value={formData && formData.pincode}\n                      required\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-12\">\n                  <div className=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Email Id</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      placeholder=\"Email Id\"\n                      name=\"email\"\n                      value={formData && formData.email}\n                      required\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-12\">\n                  <div className=\"form-group\">\n                    <label for=\"exampleInputEmail1\">DOB</label>\n                    <input\n                      type=\"date\"\n                      className=\"form-control\"\n                      name=\"dob\"\n                      value={formData && formData.dob}\n                      min=\"1950-01-01\"\n                      max=\"2000-12-31\"\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-12\">\n                  <div className=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Mobile</label>\n                    <input\n                      type=\"number\"\n                      className=\"form-control\"\n                      placeholder=\"Mobile\"\n                      name=\"phoneNumber\"\n                      value={formData && formData.phoneNumber}\n                      required\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-12\">\n                  <div className=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Password</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      required\n                      onChange={handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-12\">\n                  <div className=\"form-group\">\n                    <label for=\"exampleFormControlSelect1\">User Role</label>\n                    <select\n                      className=\"form-control\"\n                      name=\"role\"\n                      required\n                      onChange={handleChange}\n                    >\n                      <option value=\"\">Choose Role</option>\n                      <option value=\"PTM_VENDOR\">Vendor</option>\n                      <option value=\"PTM_SUB_ADMIN\">Sub Admin</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary themebtn transparent\"\n                  data-dismiss=\"modal\"\n                  onClick={closePopUpHandler}\n                >\n                  Close\n                </button>\n                <button type=\"submit\" className=\"btn btn-primary themebtn\">\n                  {editUserData ? \"Update User\" : \"Save User\"}\n                </button>\n              </div>\n              <div>\n                {errorHTML && errorStyles ? (\n                  <ul style={errorStyles}>{errorHTML}</ul>\n                ) : success && successStyles ? (\n                  <div style={successStyles}>{success}</div>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddUserForm;\n","import React, { useState, useEffect } from \"react\";\nimport Request from \"../../utils/Request\";\nimport APIS from \"../../utils/urls\";\nimport { fetchUsersList } from \"../../actions/users\";\nimport SideBar from \"../../Components/SideBar/SideBar\";\nimport BreadCrumb from \"../../Components/BreadCrumb/BreadCrumb\";\nimport AddUserForm from \"./AddUserForm\";\nimport { connect } from \"react-redux\";\n\nconst roleMapping = {\n  PTM_VENDOR: \"Vendor\",\n  PTM_ADMIN: \"Admin\",\n  PTM_SUB_ADMIN: \"Sub Admin\",\n};\n\nconst Users = (props) => {\n  const [isPopupVisible, handlePopUp] = useState(false);\n  const [userToBeEdit, setUserId] = useState(\"\");\n  const [editUserData, setEditUserData] = useState(\"\");\n  const { dispatch } = props;\n\n  const fetchUsersData = () => {\n    dispatch(fetchUsersList());\n  };\n\n  useEffect(() => {\n    fetchUsersData();\n  }, []);\n\n  const editClickHandler = (userId) => {\n    handlePopUp(true);\n    setUserId(userId);\n    const successHandler = (response, headers) => {\n      if (response.success == true) {\n        setEditUserData(response.data);\n      }\n    };\n\n    const errorHandler = (error) => {};\n\n    const request = new Request(\"\", successHandler, errorHandler, false);\n    return request.get(\n      `${APIS.login.BASE_URL}${APIS.User.EDIT_USER.replace(\"{userId}\", userId)}`\n    );\n  };\n\n  const openPopupHandler = () => {\n    document.body.classList.add(\"modal-open\");\n    handlePopUp(true);\n  };\n\n  const closePopUpHandler = () => {\n    setEditUserData(\"\");\n    document.body.classList.remove(\"modal-open\");\n    handlePopUp(false);\n  };\n\n  const { users } = props;\n\n  const userData = users && users.usersList && users.usersList.data;\n\n  return (\n    <div className=\"container_full\">\n      <SideBar {...props} />\n      <div className=\"content_wrapper\">\n        <div className=\"container-fluid\">\n          <BreadCrumb heading=\"Users\" value=\"Users\" />\n          <div className=\"row\">\n            <div className=\" col-sm-12\">\n              <div className=\"card card-shadow mb-4\">\n                <div className=\"card-header fund-modal\">\n                  <div className=\"card-title\"> </div>\n                  <button\n                    type=\"button\"\n                    className=\"btn-common\"\n                    data-toggle=\"modal\"\n                    data-target=\"#exampleModal\"\n                    onClick={openPopupHandler}\n                  >\n                    Add User\n                  </button>\n                  {isPopupVisible ? (\n                    <AddUserForm\n                      closePopUpHandler={closePopUpHandler}\n                      fetchUsersData={fetchUsersData}\n                      props={props}\n                      editUserData={editUserData}\n                      userToBeEdit={userToBeEdit}\n                    />\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n                <div className=\"card-header\">\n                  <div className=\"card-title\">\n                    <div\n                      className=\"btn-group\"\n                      role=\"group\"\n                      aria-label=\"Basic example\"\n                    >\n                      <button type=\"button\" className=\"btn-common\">\n                        Copy\n                      </button>\n                      <button type=\"button\" className=\"btn-common\">\n                        CSV\n                      </button>\n                      <button type=\"button\" className=\"btn-common\">\n                        Excel\n                      </button>\n                      <button type=\"button\" className=\"btn-common\">\n                        PDF\n                      </button>\n                      <button type=\"button\" className=\"btn-common\">\n                        Print\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"card-body\">\n                  <table\n                    id=\"bs4-table\"\n                    className=\"table table-bordered table-striped\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Id</th>\n                        <th>Company Name</th>\n                        <th>Mobile</th>\n                        <th>Email</th>\n                        <th>Role</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                      {userData && Array.isArray(userData)\n                        ? userData.map((item, index) => {\n                            let userClass = \"\";\n                            if (item.role && roleMapping[item.role]) {\n                              userClass = roleMapping[item.role]\n                                .toLowerCase()\n                                .replace(\" \", \"-\");\n                            }\n\n                            return (\n                              <tr key={item.userName}>\n                                <td>{index + 1}</td>\n                                <td>{`${item.firstName} ${item.lastName}`}</td>\n                                <td>{item.userName}</td>\n                                <td>{item.email}</td>\n                                <td className={userClass}>\n                                  {roleMapping[item.role] || \"NA\"}\n                                </td>\n                                <td className=\"done\">Active</td>\n                                <td\n                                  onClick={() =>\n                                    editClickHandler(item.userName)\n                                  }\n                                >\n                                  Edit\n                                </td>\n                              </tr>\n                            );\n                          })\n                        : \"\"}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\n\nexport default connect(mapStateToProps)(Users);\n"],"names":["initialFormData","Object","freeze","address1","address2","dob","email","firstName","landmark","langKey","lastName","otp","password","phoneNumber","pincode","qrCodeId","role","tenantId","userName","props","editUserData","closePopUpHandler","userToBeEdit","fetchUsersData","useState","formData","updateFormData","errors","updateError","success","updateSuccess","useEffect","handleChange","event","target","name","value","trim","errorHandler","error","status","fieldErrors","Array","forEach","item","push","field","message","length","window","scrollTo","successHandler","data","msg","removeOverlay","errorHTML","errorStyles","successStyles","map","val","key","color","fontSize","marginTop","className","id","tabindex","style","display","paddingRight","type","onClick","onSubmit","preventDefault","Request","post","urls","for","placeholder","onChange","required","min","max","roleMapping","PTM_VENDOR","PTM_ADMIN","PTM_SUB_ADMIN","connect","state","isPopupVisible","handlePopUp","setUserId","setEditUserData","dispatch","fetchUsersList","users","userData","usersList","SideBar","BreadCrumb","heading","document","body","classList","add","remove","isArray","index","userClass","toLowerCase","replace","userId","response","headers","get","APIS"],"sourceRoot":""}