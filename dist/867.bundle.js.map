{"version":3,"file":"867.bundle.js","mappings":"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","sources":["webpack://react-boiler-plate/./src/Pages/Payout/TableHTML.js","webpack://react-boiler-plate/./src/Pages/Payout/Reports.js"],"sourcesContent":["import React, { Fragment, memo } from \"react\";\n\nconst TableHTML = memo(({ reportsItems, filterItems }) => {\n  const reportsDataAvailable =\n    (reportsItems && Array.isArray(reportsItems) && reportsItems.length > 0) ||\n    \"\";\n\n  return (\n    <div className=\"card-body\">\n      {reportsDataAvailable ? (\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">DateTime</th>\n              <th scope=\"col\">Payment Mode</th>\n              <th scope=\"col\">Transaction Details</th>\n              <th scope=\"col\">Amount</th>\n              <th scope=\"col\">Beneficiary</th>\n              {/* {filterItems &&\n                filterItems.status &&\n                filterItems.status.toLowerCase() == \"done\" && (\n                  <th scope=\"col\">Wallet Balance</th>\n                )} */}\n\n              <th scope=\"col\">Wallet Balance</th>\n\n              <th scope=\"col\">Service Charges</th>\n\n              <th scope=\"col\">Status</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {reportsDataAvailable\n              ? reportsItems.map((item, index) => {\n                  let gst = \"\";\n                  if (item.payoutChanrge) {\n                    gst = (item.payoutChanrge * 18) / 100;\n                    gst = gst.toFixed(2);\n                  }\n                  return (\n                    <tr key={item.reqstDate}>\n                      <th scope=\"row\">{index + 1}</th>\n                      <td>{item.createdDate}</td>\n                      <td>{item.route}</td>\n                      <td>\n                        <strong> TxnId:</strong> {item.txnId} <br />\n                        {item.merchantTxnId ? (\n                          <Fragment>\n                            <strong>Merchant TxnId: </strong>{\" \"}\n                            {item.merchantTxnId}\n                          </Fragment>\n                        ) : (\n                          \"\"\n                        )}\n                      </td>\n                      <td>&#8377;{item.remittanceAmount}</td>\n\n                      <td>\n                        {item.beneficiaryName}, <br />\n                        {item.accountNumber}, <br />\n                        {item.ifscCode}\n                      </td>\n\n                      {item.openingBalance != null ? (\n                        <td>\n                          <strong> OB:</strong> {item.openingBalance} <br />\n                          <strong> CB:</strong> {item.closingBalance} <br />\n                        </td>\n                      ) : (\n                        <td>NA</td>\n                      )}\n\n                      <td>\n                        <strong>Charge : </strong>\n                        {item.payoutChanrge}\n                        <br />\n                        <strong> GST : </strong>\n                        {gst}\n                      </td>\n\n                      <td className={item.status.toLowerCase()}>\n                        {item.status}\n                      </td>\n                      <td>\n                        <button\n                          onClick={() => {}}\n                          className=\"quick-payment-btn \"\n                        ></button>\n                      </td>\n                    </tr>\n                  );\n                })\n              : \"\"}\n          </tbody>\n        </table>\n      ) : (\n        <div colSpan=\"8\" style={{ textAlign: \"center\", color: \"green\" }}>\n          No transaction Found, You can use filter option to get all required\n          transactions.\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default TableHTML;\n","import React, { useEffect, memo, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchTransactionReport } from \"../../actions/payout\";\nimport BreadCrumb from \"../../Components/BreadCrumb/BreadCrumb\";\nimport SideBar from \"../../Components/SideBar/SideBar\";\nimport TableHTML from \"./TableHTML\";\n\nconst Reports = memo((props) => {\n  const [filterItems, updateItems] = useState({});\n  const { dispatch, payout } = props;\n  useEffect(() => {\n    dispatch(fetchTransactionReport({}));\n  }, []);\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    const itemName = event.target.name;\n    const itemVal = event.target.value;\n    const params = {};\n    if (itemVal) {\n      if (itemVal.trim()) {\n        updateItems({\n          ...filterItems,\n          [itemName]: itemVal,\n        });\n      } else {\n        delete filterItems[itemName];\n        updateItems({\n          ...filterItems,\n        });\n      }\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(fetchTransactionReport(filterItems));\n  };\n\n  const reportsItems = payout && payout.reports && payout.reports.data;\n  //   accountNumber: \"50100017129260\"\n  // approvalRequired: \"N\"\n  // beneficiaryName: \"Ranjeet Singh Paliwal\"\n  // closingBalance: 10825\n  // createdDate: \"2021-09-26T17:11:32\"\n  // ifscCode: \"HDFC0001236\"\n  // lastModifiedDate: \"2021-09-26T17:12:21\"\n  // merchantTxnId: \"126922915833\"\n  // mobileNumber: null\n  // openingBalance: 10830\n  // payoutChanrge: 5\n  // remark: null\n  // remittanceAmount: 9\n  // route: \"IMPS\"\n  // status: \"DONE\"\n  // txnId: \"8f903076-f4f2-444d-9c6a-57a6fd0817e6\"\n  // type: null\n\n  /*   {\n    \"accountNumber\": \"string\",\n    \"clientId\": \"string\",\n    \"date\": \"string\",\n    \"route\": \"string\",\n    \"status\": \"string\",\n    \"txnId\": \"string\",\n    \"vendorId\": \"string\"\n  } */\n\n  console.log(\"filterItems\", filterItems);\n\n  return (\n    <div className=\"container_full\">\n      <SideBar {...props} />\n      <div className=\"content_wrapper\">\n        <div className=\"container-fluid\">\n          <BreadCrumb heading=\"Transaction Report\" value=\"Transaction Report\" />\n          <section className=\"chart_section\">\n            <div className=\"card card-shadow mb-4\">\n              <form onSubmit={handleSubmit}>\n                <table className=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Transaction Id\"\n                          name=\"txnId\"\n                          onChange={handleChange}\n                        />\n                      </th>\n                      <th scope=\"col\">\n                        <input\n                          type=\"number\"\n                          className=\"form-control\"\n                          placeholder=\"Account number\"\n                          name=\"accountNumber\"\n                          onChange={handleChange}\n                        />\n                      </th>\n                      <th scope=\"col\">\n                        <input\n                          type=\"date\"\n                          className=\"form-control\"\n                          name=\"date\"\n                          onChange={handleChange}\n                        />\n                      </th>\n                      <th scope=\"col\">\n                        <div className=\"col-md-12\">\n                          <select\n                            className=\"form-control\"\n                            id=\"exampleFormControlSelect1\"\n                            name=\"status\"\n                            onChange={handleChange}\n                          >\n                            <option value=\"\">Status</option>\n                            <option value=\"DONE\">DONE</option>\n                            <option value=\"INITIATED\">INITIATED</option>\n                            <option value=\"REJECTED\">REJECTED</option>\n                            <option value=\"FAIL\">FAIL</option>\n                          </select>\n                        </div>\n                      </th>\n                      <th scope=\"col\">\n                        <input\n                          type=\"submit\"\n                          className=\"btn-common\"\n                          value=\"Search\"\n                        />\n                      </th>\n                    </tr>\n                  </thead>\n                </table>\n              </form>\n              <div className=\"card-header\">\n                <div className=\"card-title\">\n                  <div\n                    className=\"btn-group\"\n                    role=\"group\"\n                    aria-label=\"Basic example\"\n                  >\n                    <button type=\"button\" className=\"btn-common\">\n                      Copy\n                    </button>\n                    <button type=\"button\" className=\"btn-common\">\n                      CSV\n                    </button>\n                    <button type=\"button\" className=\"btn-common\">\n                      Excel\n                    </button>\n                    <button type=\"button\" className=\"btn-common\">\n                      PDF\n                    </button>\n                    <button type=\"button\" className=\"btn-common\">\n                      Print\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <TableHTML\n                filterItems={filterItems}\n                reportsItems={reportsItems}\n              />\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst mapStateToProps = (state) => {\n  return { payout: state.payout };\n};\n\nexport default connect(mapStateToProps)(Reports);\n"],"names":["memo","reportsItems","reportsDataAvailable","filterItems","Array","isArray","length","className","scope","map","item","index","gst","payoutChanrge","toFixed","key","reqstDate","createdDate","route","txnId","merchantTxnId","Fragment","remittanceAmount","beneficiaryName","accountNumber","ifscCode","openingBalance","closingBalance","status","toLowerCase","onClick","colSpan","style","textAlign","color","Reports","props","useState","updateItems","dispatch","payout","useEffect","fetchTransactionReport","handleChange","event","preventDefault","itemName","target","name","itemVal","value","trim","reports","data","console","log","SideBar","BreadCrumb","heading","onSubmit","type","placeholder","onChange","id","role","connect","state"],"sourceRoot":""}