"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkreact_boiler_plate"] = self["webpackChunkreact_boiler_plate"] || []).push([[662],{

/***/ 9662:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Users_Users)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(4942);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__(885);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(7294);\n// EXTERNAL MODULE: ./src/utils/Request.js\nvar Request = __webpack_require__(6195);\n// EXTERNAL MODULE: ./src/utils/urls.js\nvar urls = __webpack_require__(2418);\n// EXTERNAL MODULE: ./src/actions/users.js\nvar actions_users = __webpack_require__(5302);\n// EXTERNAL MODULE: ./src/Components/SideBar/SideBar.js + 8 modules\nvar SideBar = __webpack_require__(1741);\n// EXTERNAL MODULE: ./src/Components/BreadCrumb/BreadCrumb.js + 2 modules\nvar BreadCrumb = __webpack_require__(3851);\n// EXTERNAL MODULE: ./src/utils/common.js\nvar common = __webpack_require__(2667);\n// EXTERNAL MODULE: ./src/Components/UI/StyledConstants.js\nvar StyledConstants = __webpack_require__(696);\n;// CONCATENATED MODULE: ./src/Pages/Users/AddUserForm.js\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\nvar initialFormData = Object.freeze({\n  address1: \"\",\n  address2: \"\",\n  dob: \"YYYY-MM-DD\",\n  email: \"\",\n  firstName: \"\",\n  landmark: \"\",\n  langKey: \"en\",\n  lastName: \"\",\n  otp: \"\",\n  phoneNumber: \"\",\n  pincode: \"\",\n  qrCodeId: \"\",\n  role: \"\",\n  tenantId: 0,\n  userName: \"\"\n});\n\nvar AddUserForm = function AddUserForm(props) {\n  var editUserData = props.editUserData,\n      userToBeEdit = props.userToBeEdit,\n      closePopUpHandler = props.closePopUpHandler,\n      fetchUsersData = props.fetchUsersData;\n\n  var _useState = (0,react.useState)(initialFormData),\n      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n      formData = _useState2[0],\n      updateFormData = _useState2[1];\n\n  var _useState3 = (0,react.useState)(initialFormData),\n      _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),\n      editFormData = _useState4[0],\n      updateEditFormData = _useState4[1];\n\n  var _useState5 = (0,react.useState)([]),\n      _useState6 = (0,slicedToArray/* default */.Z)(_useState5, 2),\n      errors = _useState6[0],\n      updateError = _useState6[1];\n\n  var _useState7 = (0,react.useState)(\"\"),\n      _useState8 = (0,slicedToArray/* default */.Z)(_useState7, 2),\n      success = _useState8[0],\n      updateSuccess = _useState8[1];\n\n  (0,react.useEffect)(function () {\n    if (editUserData) {\n      updateFormData(_objectSpread({}, editUserData));\n    }\n  }, [editUserData]);\n\n  var handleChange = function handleChange(event) {\n    updateFormData(_objectSpread(_objectSpread({}, formData), {}, (0,defineProperty/* default */.Z)({}, event.target.name, event.target.value)));\n  };\n\n  var updateUser = function updateUser() {\n    var api = new Request/* default */.Z(\"\", successHandler, errorHandler, false);\n    return api.post(\"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.User.UPDATE_USER */.Z.User.UPDATE_USER), formData);\n  };\n\n  var errorHandler = function errorHandler(error) {\n    // {\"timestamp\":\"2021-09-18T06:25:35.505+00:00\",\"status\":401,\"error\":\"Unauthorized\",\"message\":\"\",\"path\":\"/api/users\"}\n    var errors = [];\n\n    if (error && error.status == 400) {\n      if (error.fieldErrors && error.fieldErrors instanceof Array) {\n        error.fieldErrors.forEach(function (item) {\n          return errors.push(\"\".concat(item.field, \": \").concat(item.message));\n        });\n      }\n\n      if (errors.length > 0) {\n        updateError(errors);\n        window.scrollTo(100, 100);\n      }\n    } else if (error && error.status == 401) {\n      updateError([error.error]);\n      window.scrollTo(100, 100);\n    }\n  };\n\n  var successHandler = function successHandler(data) {\n    if (!data.success) {\n      updateError([data.msg]);\n    } else {\n      updateError([]);\n      updateSuccess(data.msg);\n      closePopUpHandler();\n      (0,common/* removeOverlay */.rG)();\n      fetchUsersData();\n    }\n  };\n\n  var submitFormHandler = function submitFormHandler(event) {\n    event.preventDefault();\n\n    if (editUserData) {\n      updateUser();\n    }\n\n    formData.userName = formData.phoneNumber; // pricingToken;\n\n    var api = new Request/* default */.Z(\"\", successHandler, errorHandler, false);\n    return api.post(urls/* default.login.BASE_URL */.Z.login.BASE_URL + urls/* default.User.CREATE_NEW_USER */.Z.User.CREATE_NEW_USER, formData);\n  };\n\n  var errorHTML = \"\";\n  var errorStyles = \"\";\n  var successStyles = \"\";\n\n  if (errors.length > 0) {\n    errorHTML = errors.map(function (val) {\n      return /*#__PURE__*/react.createElement(\"li\", {\n        key: val\n      }, val);\n    });\n    errorStyles = {\n      color: \"red\",\n      fontSize: \"14px\",\n      marginTop: \"26px\"\n    };\n  } else {\n    successStyles = {\n      color: \"green\",\n      fontSize: \"14px\",\n      marginTop: \"26px\"\n    };\n  }\n\n  console.log(\"editUserData\", editUserData);\n  return /*#__PURE__*/react.createElement(StyledConstants/* ModalWrapper */.AB, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-dialog\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-content\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-header\"\n  }, /*#__PURE__*/react.createElement(\"h4\", {\n    className: \"modal-title\"\n  }, \"Add User\"), /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"button\",\n    className: \"close\",\n    onClick: closePopUpHandler\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-body\"\n  }, /*#__PURE__*/react.createElement(\"form\", {\n    onSubmit: submitFormHandler\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"row pb16\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    \"for\": \"exampleInputEmail1\"\n  }, \"First Name\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"First Name\",\n    name: \"firstName\",\n    value: formData && formData.firstName,\n    onChange: handleChange\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    \"for\": \"exampleInputEmail1\"\n  }, \"Last Name\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Last Name\",\n    name: \"lastName\",\n    value: formData && formData.lastName,\n    onChange: handleChange\n  }))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"row pb16\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-12\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    \"for\": \"exampleInputEmail1\"\n  }, \"Email Id\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    placeholder: \"Email Id\",\n    name: \"email\",\n    value: formData && formData.email,\n    required: true,\n    onChange: handleChange\n  }))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"row pb16\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    \"for\": \"exampleInputEmail1\"\n  }, \"DOB\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"date\",\n    className: \"form-control\",\n    name: \"dob\",\n    value: formData.dob,\n    min: \"1950-01-01\",\n    max: \"2000-12-31\",\n    onChange: handleChange\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    \"for\": \"exampleInputEmail1\"\n  }, \"Mobile\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    placeholder: \"Mobile\",\n    name: \"phoneNumber\",\n    value: formData && formData.phoneNumber,\n    required: true,\n    onChange: handleChange\n  }))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"row pb16\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-12\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    \"for\": \"exampleInputEmail1\"\n  }, \"Address1\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Address1\",\n    name: \"address1\",\n    value: formData && formData.address1,\n    required: true,\n    onChange: handleChange\n  }))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"row pb16\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-12\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    \"for\": \"exampleInputEmail1\"\n  }, \"Address2\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Address2\",\n    name: \"address2\",\n    value: formData && formData.address2,\n    onChange: handleChange\n  }))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"row pb16\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    \"for\": \"exampleInputEmail1\"\n  }, \"Land Mark\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Land Mark\",\n    name: \"landmark\",\n    value: formData && formData.landmark,\n    onChange: handleChange\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-6\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    \"for\": \"exampleInputEmail1\"\n  }, \"Pin Code\"), /*#__PURE__*/react.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    placeholder: \"Pin Code\",\n    name: \"pincode\",\n    value: formData && formData.pincode,\n    required: true,\n    onChange: handleChange\n  }))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"row pb16\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"col-12\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    \"for\": \"exampleFormControlSelect1\"\n  }, \"User Role\"), /*#__PURE__*/react.createElement(\"select\", {\n    className: \"form-control\",\n    name: \"role\",\n    required: true,\n    onChange: handleChange\n  }, /*#__PURE__*/react.createElement(\"option\", {\n    value: \"\"\n  }, \"Choose Role\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"PTM_VENDOR\",\n    selected: editUserData && editUserData.role == \"PTM_VENDOR\" ? true : false\n  }, \"Vendor\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"PTM_SUB_ADMIN\",\n    selected: editUserData && editUserData.role == \"PTM_SUB_ADMIN\" ? true : false\n  }, \"Sub Admin\")))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex item-center justify-center gap16\"\n  }, /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"button\",\n    className: \"btn-danger\",\n    onClick: closePopUpHandler\n  }, \"Close\"), /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"submit\",\n    className: \"btn-success\"\n  }, editUserData ? \"Update User\" : \"Save User\")))))));\n};\n\n/* harmony default export */ const Users_AddUserForm = (AddUserForm); // {modal &&\n//   <ModalWrapper>\n//     <div className=\"modal-dialog\">\n//       <div className=\"modal-content\">\n//         <div className=\"modal-header\">\n//           <h4>Change Active QR Code</h4>\n//         </div>\n//         <div className=\"modal-body\">\n//           <ChangeQrWrapper>\n//             <select\n//               name=\"qrCode\"\n//               className=\"form-control\"\n//               onChange={(e) => setQrCode(e.target.value)}\n//             >\n//               <option value=\"\">Select QR Code</option>\n//               <option value=\"QR Code 1\">QR Code 1</option>\n//               <option value=\"QR Code 2\">QR Code 2</option>\n//               <option value=\"QR Code 3\">QR Code 3</option>\n//             </select>\n//             <div className=\"qr-image flex item-center justify-center\">\n//               <img src=\"https://storage.googleapis.com/ptm-assets-prod/icons/yes-paytm.png\" alt=\"\" />\n//             </div>\n//             <div className=\"flex item-center justify-center\">\n//               <Button className=\"btn-success\">Change QR Code</Button>\n//             </div>\n//           </ChangeQrWrapper>\n//         </div>\n//       </div>\n//     </div>\n//   </ModalWrapper>\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(9669);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n;// CONCATENATED MODULE: ./src/Pages/Users/PermissionForm.js\n\n\n\nfunction PermissionForm_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction PermissionForm_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { PermissionForm_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { PermissionForm_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\n\n\nvar PermissionForm = function PermissionForm(props) {\n  var userId = props.userId,\n      closePopUpHandler = props.closePopUpHandler;\n\n  var _useState = (0,react.useState)(\"\"),\n      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n      permissions = _useState2[0],\n      setPermissions = _useState2[1];\n\n  var _useState3 = (0,react.useState)({\n    error: \"\",\n    success: \"\"\n  }),\n      _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var fetchPermissions = function fetchPermissions() {\n    var successHandler = function successHandler(res) {\n      // console.log(\"success\", res);\n      if (res) {\n        setPermissions(res);\n        updateFormData(res.activePermissions);\n      }\n    };\n\n    var options = {\n      headers: {\n        Authorization: (0,common/* getAuthToken */.bW)(),\n        \"api-Authorization\": (0,common/* getAuthToken */.bW)(\"api-Authorization\")\n      }\n    };\n    var promise1 = axios_default().get(\"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.User.GET_ALL_PERMISISSIONS */.Z.User.GET_ALL_PERMISISSIONS), options)[\"catch\"](function () {\n      return \"\";\n    });\n    var promise2 = axios_default().get(\"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.User.MANAGE_USER_PERMISSIONS */.Z.User.MANAGE_USER_PERMISSIONS, \"?userName=\").concat(userId), options)[\"catch\"](function () {\n      return \"\";\n    });\n    axios_default().all([promise1, promise2]).then(axios_default().spread(function () {\n      for (var _len = arguments.length, responses = new Array(_len), _key = 0; _key < _len; _key++) {\n        responses[_key] = arguments[_key];\n      }\n\n      var allPermissions = responses[0] && responses[0].data.data;\n      var activePermissions = responses[1] && responses[1].data.data;\n      successHandler({\n        allPermissions: allPermissions,\n        activePermissions: activePermissions\n      });\n    }))[\"catch\"](function (errors) {\n      console.log(\"responseOne errors\", errors);\n    });\n  };\n\n  (0,react.useEffect)(function () {\n    fetchPermissions();\n  }, []);\n\n  var handleClick = function handleClick(event, permKey) {\n    // console.log(\n    //   activePermissions,\n    //   permKey,\n    //   event.target.name,\n    //   event.target.checked\n    // );\n    var activePermissionsCopy = JSON.parse(JSON.stringify(activePermissions));\n\n    if (event.target.checked) {\n      if (activePermissionsCopy[permKey]) {\n        activePermissionsCopy[permKey].push(event.target.name);\n      } else {\n        activePermissionsCopy[permKey] = [event.target.name];\n      }\n    } else {\n      var filteredArray = activePermissionsCopy[permKey].filter(function (item) {\n        return item != event.target.name;\n      });\n      activePermissionsCopy[permKey] = filteredArray;\n    }\n\n    setPermissions(PermissionForm_objectSpread(PermissionForm_objectSpread({}, permissions), {}, {\n      activePermissions: activePermissionsCopy\n    }));\n  };\n\n  var submitFormHandler = function submitFormHandler(event) {\n    event.preventDefault();\n    var activePermissions = permissions.activePermissions;\n    console.log(\"submitFormHandler\", activePermissions);\n    var newPermissions = [];\n    Object.keys(activePermissions).forEach(function (key) {\n      newPermissions = newPermissions.concat(activePermissions[key]);\n    });\n    console.log(\"newPermissions\", newPermissions);\n    var formData = {\n      userName: userId,\n      addApiCode: newPermissions\n    };\n\n    var submitSuccess = function submitSuccess(res) {\n      if (res.success) {\n        setMessage({\n          success: res.msg,\n          error: \"\"\n        });\n      } else {\n        setMessage({\n          error: res.msg,\n          success: \"\"\n        });\n      }\n    };\n\n    var submitError = function submitError(res) {\n      setMessage({\n        error: res.msg,\n        success: \"\"\n      });\n    };\n\n    var api = new Request/* default */.Z(\"\", submitSuccess, submitError, false);\n    return api.post(urls/* default.login.BASE_URL */.Z.login.BASE_URL + urls/* default.User.MANAGE_USER_PERMISSIONS */.Z.User.MANAGE_USER_PERMISSIONS, formData);\n  };\n\n  var allPermissions = permissions.allPermissions,\n      activePermissions = permissions.activePermissions;\n  console.log(\"permissions\", activePermissions);\n  var data = [];\n  var permKeys = allPermissions ? Object.keys(allPermissions) : \"\";\n  return /*#__PURE__*/react.createElement(StyledConstants/* ModalWrapper */.AB, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-content\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-header\"\n  }, /*#__PURE__*/react.createElement(\"h4\", {\n    className: \"modal-title\",\n    id: \"exampleModalLabel\"\n  }, \"Manage Permissions\"), /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"button\",\n    className: \"close\",\n    onClick: closePopUpHandler\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-body\"\n  }, /*#__PURE__*/react.createElement(\"form\", {\n    onSubmit: submitFormHandler\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pb16\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: message.success ? \"done\" : \"fail\"\n  }, message.success || message.error), permKeys && Array.isArray(permKeys) ? permKeys.map(function (permKey) {\n    return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"h6\", {\n      className: \"py8\"\n    }, permKey), /*#__PURE__*/react.createElement(\"ul\", {\n      className: \"pl16\"\n    }, allPermissions && allPermissions[permKey] && Array.isArray(allPermissions[permKey]) ? allPermissions[permKey].map(function (item) {\n      return /*#__PURE__*/react.createElement(\"li\", {\n        className: \"py4\"\n      }, /*#__PURE__*/react.createElement(\"input\", {\n        type: \"checkbox\",\n        name: item,\n        checked: activePermissions && activePermissions[permKey] && activePermissions[permKey].includes(item) ? true : false,\n        onClick: function onClick(event) {\n          return handleClick(event, permKey);\n        },\n        style: {\n          marginRight: \"10px\"\n        }\n      }), item.replace(/_/g, \" \").replace(\"PTM \", \"\"));\n    }) : \"\"));\n  }) : /*#__PURE__*/react.createElement(\"div\", {\n    style: {\n      margin: \"167px 0 156px 0\",\n      fontSize: \"26px\",\n      textAlign: \"center\",\n      color: \"#0aaaba\"\n    }\n  }, \"Loading....\")), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex item-center justify-center gap16\"\n  }, /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"button\",\n    className: \"btn-light\",\n    \"data-dismiss\": \"modal\",\n    onClick: closePopUpHandler\n  }, \"Close\"), /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"submit\",\n    className: \"btn-success\"\n  }, \"Update Permissions\")))))));\n};\n\n/* harmony default export */ const Users_PermissionForm = (PermissionForm);\n;// CONCATENATED MODULE: ./src/Pages/Users/AdminFundForm.js\n\n\n\nfunction AdminFundForm_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction AdminFundForm_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { AdminFundForm_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { AdminFundForm_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\nfunction AdminFundForm(_ref) {\n  var userId = _ref.userId,\n      closeAdminFundForm = _ref.closeAdminFundForm,\n      setStatusMsg = _ref.setStatusMsg,\n      successCallBack = _ref.successCallBack;\n\n  var _useState = (0,react.useState)({\n    amount: \"\",\n    remark: \"\",\n    ewalletType: \"MAIN_WALLET\",\n    userId: userId\n  }),\n      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  var walletSelect = (0,react.useRef)();\n\n  var submitFormHandler = function submitFormHandler(event) {\n    event.preventDefault();\n    var walletAction = walletSelect.current.value;\n    var request = new Request/* default */.Z(\"\", successHandler, errorHandler, true);\n    var walletAPI = \"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.Wallet.MANAGE_WALLET */.Z.Wallet.MANAGE_WALLET).replace(\"{actionType}\", walletAction);\n    formData.amount = parseInt(formData.amount);\n    request.post(walletAPI, formData);\n  };\n\n  var successHandler = function successHandler(response, headers) {\n    if (response.success) {\n      closeAdminFundForm();\n      successCallBack();\n      setStatusMsg(\"Action to wallet is submitted successfully\");\n    }\n  };\n\n  var errorHandler = function errorHandler(error) {\n    console.log(\"failed call\");\n  };\n\n  var handleChange = function handleChange(event) {\n    setFormData(function (prevState) {\n      return AdminFundForm_objectSpread(AdminFundForm_objectSpread({}, prevState), {}, (0,defineProperty/* default */.Z)({}, event.target.name, event.target.value));\n    });\n  };\n\n  console.log(\"formData\", formData);\n  return /*#__PURE__*/react.createElement(StyledConstants/* ModalWrapper */.AB, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-content\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-header\"\n  }, /*#__PURE__*/react.createElement(\"h4\", {\n    className: \"modal-title\"\n  }, \"Add Fund\"), /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"button\",\n    className: \"close\",\n    onClick: closeAdminFundForm\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-body\"\n  }, /*#__PURE__*/react.createElement(\"form\", {\n    onSubmit: function onSubmit(event) {\n      return submitFormHandler(event);\n    }\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pb16\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\"\n  }, \"Amount\"), /*#__PURE__*/react.createElement(\"input\", {\n    required: true,\n    type: \"number\",\n    className: \"form-control\",\n    placeholder: \"Amount\",\n    name: \"amount\",\n    onChange: handleChange\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pb16\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\"\n  }, \"Action\"), /*#__PURE__*/react.createElement(\"select\", {\n    required: true,\n    ref: walletSelect,\n    className: \"form-control\"\n  }, /*#__PURE__*/react.createElement(\"option\", {\n    value: \"\"\n  }, \"Choose Action\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"deposit\"\n  }, \"Deposit\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"debit\"\n  }, \"Withdraw\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"hold\"\n  }, \"Hold\"), /*#__PURE__*/react.createElement(\"option\", {\n    value: \"hold-withdraw\"\n  }, \"Block\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"pb16\"\n  }, /*#__PURE__*/react.createElement(\"label\", {\n    className: \"label\"\n  }, \"Remark\"), /*#__PURE__*/react.createElement(\"input\", {\n    required: true,\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Remark\",\n    name: \"remark\",\n    onChange: handleChange\n  }))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex item-center justify-center gap16\"\n  }, /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"button\",\n    className: \"btn-light\",\n    \"data-dismiss\": \"modal\",\n    onClick: closeAdminFundForm\n  }, \"Close\"), /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"submit\",\n    className: \"btn-success\"\n  }, \"Add Fund\")))))));\n}\n\n/* harmony default export */ const Users_AdminFundForm = (AdminFundForm);\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 19 modules\nvar es = __webpack_require__(4494);\n;// CONCATENATED MODULE: ./src/Pages/Users/WalletDetails.js\n\n\n\n\n\n\nfunction WalletDetails(_ref) {\n  var userId = _ref.userId,\n      closeTransactionHandler = _ref.closeTransactionHandler,\n      successCallBack = _ref.successCallBack,\n      userWallet = _ref.userWallet;\n\n  var fetchWalletDetails = function fetchWalletDetails() {\n    var request = new Request/* default */.Z(\"\", successHandler, errorHandler, true);\n    var walletAPI = \"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.Wallet.VIEW_TRANSACTIONS */.Z.Wallet.VIEW_TRANSACTIONS).replace(\"{userId}\", userWallet.userName);\n    userWallet.userId = parseInt(userWallet.userId);\n    request.get(walletAPI);\n  };\n\n  var successHandler = function successHandler(response, headers) {\n    if (response.success) {\n      setObtainedWalletDetails(response.data);\n    }\n  };\n\n  var _useState = (0,react.useState)([]),\n      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n      obtainedWalletDetails = _useState2[0],\n      setObtainedWalletDetails = _useState2[1];\n\n  var errorHandler = function errorHandler(error) {\n    console.log(\"failed call\");\n  };\n\n  (0,react.useEffect)(function () {\n    fetchWalletDetails();\n  }, []);\n  return /*#__PURE__*/react.createElement(StyledConstants/* ModalWrapper */.AB, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-dialog\",\n    role: \"document\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-content\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-header\"\n  }, /*#__PURE__*/react.createElement(\"h5\", {\n    className: \"modal-title\",\n    id: \"exampleModalLabel\"\n  }, \"Details\"), /*#__PURE__*/react.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    onClick: closeTransactionHandler\n  }, /*#__PURE__*/react.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"modal-body\"\n  }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"ul\", null, obtainedWalletDetails.map(function (details) {\n    return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"li\", null, Object.entries(details).map(function (_ref2) {\n      var _ref3 = (0,slicedToArray/* default */.Z)(_ref2, 2),\n          key = _ref3[0],\n          value = _ref3[1];\n\n      return /*#__PURE__*/react.createElement(\"li\", null, \"\".concat(key, \" : \").concat(value));\n    })));\n  })), /*#__PURE__*/react.createElement(\"tr\", {\n    className: \"modal-footer\"\n  }, /*#__PURE__*/react.createElement(\"td\", null, /*#__PURE__*/react.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary themebtn transparent\",\n    \"data-dismiss\": \"modal\",\n    onClick: closeTransactionHandler\n  }, \"Close\"))))))));\n}\n\n/* harmony default export */ const Users_WalletDetails = (WalletDetails);\n;// CONCATENATED MODULE: ./src/Pages/Users/Users.js\n\n\n\nfunction Users_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction Users_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Users_ownKeys(Object(source), true).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Users_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar roleMapping = {\n  PTM_VENDOR: \"Vendor\",\n  PTM_ADMIN: \"Admin\",\n  PTM_SUB_ADMIN: \"Sub Admin\"\n};\nvar styles = {\n  iconContainer: {\n    padding: \"10px\",\n    cursor: \"pointer\"\n  },\n  bulbContainer: {\n    N: {\n      color: \"gray\",\n      padding: \"10px\"\n    },\n    Y: {\n      color: \"green\",\n      padding: \"10px\"\n    }\n  }\n};\n\nvar Users = function Users(props) {\n  var _useState = (0,react.useState)(false),\n      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),\n      isPopupVisible = _useState2[0],\n      handlePopUp = _useState2[1];\n\n  var _useState3 = (0,react.useState)({\n    userName: \"\",\n    msg: \"\",\n    status: \"\"\n  }),\n      _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),\n      userStatus = _useState4[0],\n      setUserStatus = _useState4[1];\n\n  var _useState5 = (0,react.useState)(false),\n      _useState6 = (0,slicedToArray/* default */.Z)(_useState5, 2),\n      transationPopupVisible = _useState6[0],\n      setTransationPopupVisible = _useState6[1];\n\n  var _useState7 = (0,react.useState)({}),\n      _useState8 = (0,slicedToArray/* default */.Z)(_useState7, 2),\n      userTransactionDetails = _useState8[0],\n      setUserTransactionDetails = _useState8[1];\n\n  var _useState9 = (0,react.useState)(),\n      _useState10 = (0,slicedToArray/* default */.Z)(_useState9, 2),\n      showPhoneNumberField = _useState10[0],\n      setShowPhoneNumberField = _useState10[1];\n\n  var _useState11 = (0,react.useState)(\"\"),\n      _useState12 = (0,slicedToArray/* default */.Z)(_useState11, 2),\n      statusMsg = _useState12[0],\n      setStatusMsg = _useState12[1];\n\n  var _useState13 = (0,react.useState)(\"\"),\n      _useState14 = (0,slicedToArray/* default */.Z)(_useState13, 2),\n      userToBeEdit = _useState14[0],\n      setUserId = _useState14[1];\n\n  var _useState15 = (0,react.useState)(\"\"),\n      _useState16 = (0,slicedToArray/* default */.Z)(_useState15, 2),\n      editUserData = _useState16[0],\n      setEditUserData = _useState16[1];\n\n  var _useState17 = (0,react.useState)({\n    isPopupVisible: false,\n    userId: \"\"\n  }),\n      _useState18 = (0,slicedToArray/* default */.Z)(_useState17, 2),\n      permissionData = _useState18[0],\n      setPermissionData = _useState18[1];\n\n  var _useState19 = (0,react.useState)(\"\"),\n      _useState20 = (0,slicedToArray/* default */.Z)(_useState19, 2),\n      adminFormData = _useState20[0],\n      setAdminFormData = _useState20[1];\n\n  var _useState21 = (0,react.useState)(false),\n      _useState22 = (0,slicedToArray/* default */.Z)(_useState21, 2),\n      isTooltip = _useState22[0],\n      setTooltip = _useState22[1];\n\n  var dispatch = props.dispatch;\n\n  var fetchUsersData = function fetchUsersData() {\n    dispatch((0,actions_users/* fetchUsersList */.iI)());\n  };\n\n  (0,react.useEffect)(function () {\n    fetchUsersData();\n  }, []);\n\n  var showTransactionHandler = function showTransactionHandler(item) {\n    setUserTransactionDetails(item);\n    setTransationPopupVisible(true);\n    (0,common/* addOverlay */.Dw)();\n  };\n\n  var closeTransactionHandler = function closeTransactionHandler() {\n    setTransationPopupVisible(false);\n    (0,common/* removeOverlay */.rG)();\n  };\n\n  var editClickHandler = function editClickHandler(userId) {\n    setShowPhoneNumberField(false);\n    handlePopUp(true);\n    (0,common/* addOverlay */.Dw)();\n    setUserId(userId);\n\n    var successHandler = function successHandler(response, headers) {\n      if (response.success == true) {\n        setEditUserData(response.data);\n      }\n    };\n\n    var errorHandler = function errorHandler(error) {};\n\n    var request = new Request/* default */.Z(\"\", successHandler, errorHandler, false);\n    return request.get(\"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.User.EDIT_USER.replace */.Z.User.EDIT_USER.replace(\"{userId}\", userId)));\n  };\n\n  var adminFundFormHandler = function adminFundFormHandler(userId) {\n    (0,common/* addOverlay */.Dw)();\n    setAdminFormData(userId);\n  };\n\n  var permissionClickHandler = function permissionClickHandler(userId) {\n    (0,common/* addOverlay */.Dw)();\n    setPermissionData({\n      isPopupVisible: true,\n      userId: userId\n    });\n  };\n\n  var openPopupHandler = function openPopupHandler() {\n    document.body.classList.add(\"modal-open\");\n    setShowPhoneNumberField(true);\n    handlePopUp(true);\n  };\n\n  var handleUserStatus = function handleUserStatus(userId, curentStatus) {\n    var status = curentStatus == \"N\" ? \"Y\" : \"N\";\n    setTooltip(false);\n\n    var successHandler = function successHandler(response) {\n      console.log(\"responseresponse\", response);\n\n      if (response.success) {\n        var msg = status == \"N\" ? \"deactivated\" : \"activated\";\n        setTooltip(true);\n        setUserStatus({\n          userName: userId,\n          status: status,\n          msg: /*#__PURE__*/react.createElement(react.Fragment, null, \"This user is now \", /*#__PURE__*/react.createElement(\"strong\", null, msg))\n        });\n      }\n    };\n\n    var errorHandler = function errorHandler(error) {};\n\n    var request = new Request/* default */.Z(\"\", successHandler, errorHandler, false);\n    var params = \"?userId=\".concat(userId, \"&status=\").concat(status);\n    return request.put(\"\".concat(urls/* default.login.BASE_URL */.Z.login.BASE_URL).concat(urls/* default.User.MANAGE_USER_STATUS */.Z.User.MANAGE_USER_STATUS).concat(params));\n  };\n\n  var closeAdminFundPopUpHandler = function closeAdminFundPopUpHandler() {\n    setAdminFormData(\"\");\n    (0,common/* removeOverlay */.rG)();\n    document.body.classList.remove(\"modal-open\");\n  };\n\n  var closePopUpHandler = function closePopUpHandler() {\n    setEditUserData(\"\");\n    (0,common/* removeOverlay */.rG)();\n    document.body.classList.remove(\"modal-open\");\n    handlePopUp(false);\n  };\n\n  var closePermissionPopup = function closePermissionPopup() {\n    setPermissionData(Users_objectSpread(Users_objectSpread({}, permissionData), {}, {\n      userId: \"\",\n      isPopupVisible: false\n    }));\n    (0,common/* removeOverlay */.rG)();\n  };\n\n  var users = props.users;\n  var userData = users && users.usersList && users.usersList.data;\n\n  if (userData) {\n    userData = userData.map(function (item) {\n      if (item.userName == userStatus.userName) {\n        item.isActive = userStatus.status;\n      }\n\n      return item;\n    });\n  } // useEffect(() => {\n  //   if(isTooltip) {\n  //     setTimeout(() => {\n  //       setTooltip(false);\n  //     }, 2000)\n  //   }\n  // }, [isTooltip])\n\n\n  (0,react.useEffect)(function () {\n    if (statusMsg) {\n      setTimeout(function () {\n        setStatusMsg(\"\");\n      }, 3000);\n    }\n  }, [statusMsg]);\n  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(BreadCrumb/* default */.Z, {\n    heading: \"Users\",\n    value: \"Users\"\n  }), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card-wrapper flex-column mb-4\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card-header flex item-center space-between\"\n  }, /*#__PURE__*/react.createElement(\"h4\", {\n    className: \"card-title\"\n  }, \"Users List\"), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex gap4\"\n  }, /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"button\",\n    className: \"btn-soft-success\"\n  }, \"CSV\"), /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"button\",\n    className: \"btn-soft-success\",\n    onClick: function onClick() {\n      return (0,common/* printPage */.ej)();\n    }\n  }, \"Print\"))), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"card-body\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"flex space-between p16\"\n  }, /*#__PURE__*/react.createElement(StyledConstants/* Button */.zx, {\n    type: \"button\",\n    className: \"btn-success\",\n    onClick: openPopupHandler\n  }, \"Add User\")), /*#__PURE__*/react.createElement(StyledConstants/* TableWrapper */.y6, null, statusMsg && /*#__PURE__*/react.createElement(StyledConstants/* AlertWrapper */.Yc, {\n    className: \"alert alert-normal\"\n  }, statusMsg), /*#__PURE__*/react.createElement(\"table\", {\n    className: \"table\"\n  }, /*#__PURE__*/react.createElement(\"thead\", null, /*#__PURE__*/react.createElement(\"tr\", null, /*#__PURE__*/react.createElement(\"th\", null, \"Id\"), /*#__PURE__*/react.createElement(\"th\", null, \"Company Name\"), /*#__PURE__*/react.createElement(\"th\", null, \"Mobile\"), /*#__PURE__*/react.createElement(\"th\", null, \"Email\"), /*#__PURE__*/react.createElement(\"th\", null, \"Role\"), /*#__PURE__*/react.createElement(\"th\", null, \"Wallet\"), /*#__PURE__*/react.createElement(\"th\", null, \"Hold Amount\"), /*#__PURE__*/react.createElement(\"th\", null, \"Status\"), /*#__PURE__*/react.createElement(\"th\", null, \"Action\"))), /*#__PURE__*/react.createElement(\"tbody\", null, userData && Array.isArray(userData) ? userData.map(function (item, index) {\n    var userClass = \"\";\n\n    if (item.role && roleMapping[item.role]) {\n      userClass = roleMapping[item.role].toLowerCase().replace(\" \", \"-\");\n    }\n\n    var status = item.isActive;\n    return /*#__PURE__*/react.createElement(\"tr\", {\n      key: item.userName\n    }, /*#__PURE__*/react.createElement(\"td\", null, index + 1), /*#__PURE__*/react.createElement(\"td\", null, \"\".concat(item.firstName, \" \").concat(item.lastName)), /*#__PURE__*/react.createElement(\"td\", null, item.userName), /*#__PURE__*/react.createElement(\"td\", null, item.email), /*#__PURE__*/react.createElement(\"td\", {\n      className: userClass\n    }, roleMapping[item.role] || \"NA\"), /*#__PURE__*/react.createElement(\"td\", null, \"Rs. \", item.userBalance || \"0\", /*#__PURE__*/react.createElement(\"i\", {\n      style: styles.iconContainer,\n      className: \"icon-info\",\n      title: \"Show Transactions\",\n      onClick: function onClick() {\n        return showTransactionHandler(item);\n      }\n    })), /*#__PURE__*/react.createElement(\"td\", null, item.holdBalance ? \"Rs.\" + item.holdBalance : \"-\"), /*#__PURE__*/react.createElement(\"td\", null, \"\".concat(item.isActive == \"N\" ? \"Inactive\" : \"Active\")), /*#__PURE__*/react.createElement(\"td\", null, /*#__PURE__*/react.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      }\n    }, /*#__PURE__*/react.createElement(\"div\", {\n      style: styles.iconContainer\n    }, /*#__PURE__*/react.createElement(\"i\", {\n      \"class\": \"icon-pencil\",\n      onClick: function onClick() {\n        return editClickHandler(item.userName);\n      },\n      style: {\n        cursor: \"pointer\"\n      },\n      title: \"update user\"\n    })), /*#__PURE__*/react.createElement(\"div\", {\n      style: styles.iconContainer\n    }, /*#__PURE__*/react.createElement(\"i\", {\n      \"class\": \"icon-key\",\n      onClick: function onClick() {\n        return permissionClickHandler(item.userName);\n      },\n      title: \"Manage Permissions\",\n      style: {\n        cursor: \"pointer\"\n      }\n    })), /*#__PURE__*/react.createElement(\"div\", {\n      style: styles.iconContainer\n    }, /*#__PURE__*/react.createElement(\"i\", {\n      className: \"icon-plus\",\n      title: \"Add Fund\",\n      onClick: function onClick() {\n        console.log(\"successful\");\n        adminFundFormHandler(item.userName);\n      }\n    })), /*#__PURE__*/react.createElement(StyledConstants/* TooltipWrapper */.pf, {\n      style: styles.bulbContainer[status],\n      onClick: function onClick() {\n        return handleUserStatus(item.userName, status);\n      }\n    }, /*#__PURE__*/react.createElement(\"i\", {\n      className: \"icon-bulb\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      title: \"\".concat(item.isActive == \"N\" ? \"Active\" : \"Inactive\")\n    }), userStatus.userName == item.userName && isTooltip && /*#__PURE__*/react.createElement(\"div\", {\n      className: \"tooltip tooltip-success\"\n    }, userStatus === null || userStatus === void 0 ? void 0 : userStatus.msg)))));\n  }) : \"\"))))), adminFormData ? /*#__PURE__*/react.createElement(Users_AdminFundForm, {\n    userId: adminFormData,\n    closeAdminFundForm: closeAdminFundPopUpHandler,\n    setStatusMsg: setStatusMsg,\n    successCallBack: fetchUsersData\n  }) : \"\", isPopupVisible ? /*#__PURE__*/react.createElement(Users_AddUserForm, {\n    closePopUpHandler: closePopUpHandler,\n    fetchUsersData: fetchUsersData,\n    props: props,\n    editUserData: editUserData,\n    userToBeEdit: userToBeEdit,\n    showPhoneNumberField: showPhoneNumberField\n  }) : \"\", transationPopupVisible ? /*#__PURE__*/react.createElement(Users_WalletDetails, {\n    userWallet: userTransactionDetails,\n    closeTransactionHandler: closeTransactionHandler\n  }) : \"\", permissionData.isPopupVisible ? /*#__PURE__*/react.createElement(Users_PermissionForm, {\n    closePopUpHandler: closePermissionPopup,\n    userId: permissionData.userId\n  }) : \"\");\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return Users_objectSpread({}, state);\n};\n\n/* harmony default export */ const Users_Users = ((0,es/* connect */.$j)(mapStateToProps)(Users));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFNBQUssRUFBRUosS0FIVDtBQUlFLGdCQUFZLEVBQUVDLFlBSmhCO0FBS0UsZ0JBQVksRUFBRUMsWUFMaEI7QUFNRSx3QkFBb0IsRUFBRTRKO0FBTnhCLElBRGEsR0FVYixFQXJMSixFQXdMR0osc0JBQXNCLGdCQUNyQixvQkFBQyxtQkFBRDtBQUNFLGNBQVUsRUFBRUUsc0JBRGQ7QUFFRSwyQkFBdUIsRUFBRW5DO0FBRjNCLElBRHFCLEdBTXJCLEVBOUxKLEVBaU1HMEMsY0FBYyxDQUFDYixjQUFmLGdCQUNDLG9CQUFDLG9CQUFEO0FBQ0UscUJBQWlCLEVBQUVxQyxvQkFEckI7QUFFRSxVQUFNLEVBQUV4QixjQUFjLENBQUMxRztBQUZ6QixJQURELEdBTUMsRUF2TUosQ0FERjtBQTRNRCxDQXZXRDs7QUF5V0EsSUFBTWdKLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ0MsS0FBRCxFQUFXO0FBQ2pDLGdDQUNLQSxLQURMO0FBR0QsQ0FKRDs7QUFNQSxrREFBZXRFLHNCQUFPLENBQUNxRSxlQUFELENBQVAsQ0FBeUJwRCxLQUF6QixDQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtYm9pbGVyLXBsYXRlLy4vc3JjL1BhZ2VzL1VzZXJzL0FkZFVzZXJGb3JtLmpzPzBmMjkiLCJ3ZWJwYWNrOi8vcmVhY3QtYm9pbGVyLXBsYXRlLy4vc3JjL1BhZ2VzL1VzZXJzL1Blcm1pc3Npb25Gb3JtLmpzP2JmODQiLCJ3ZWJwYWNrOi8vcmVhY3QtYm9pbGVyLXBsYXRlLy4vc3JjL1BhZ2VzL1VzZXJzL0FkbWluRnVuZEZvcm0uanM/NDc0NiIsIndlYnBhY2s6Ly9yZWFjdC1ib2lsZXItcGxhdGUvLi9zcmMvUGFnZXMvVXNlcnMvV2FsbGV0RGV0YWlscy5qcz82NDRjIiwid2VicGFjazovL3JlYWN0LWJvaWxlci1wbGF0ZS8uL3NyYy9QYWdlcy9Vc2Vycy9Vc2Vycy5qcz9iOWYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUmVxdWVzdCBmcm9tIFwiLi4vLi4vdXRpbHMvUmVxdWVzdFwiO1xuaW1wb3J0IHVybHMgZnJvbSBcIi4uLy4uL3V0aWxzL3VybHNcIjtcbmltcG9ydCB7IHJlbW92ZU92ZXJsYXkgfSBmcm9tIFwiLi4vLi4vdXRpbHMvY29tbW9uXCI7XG5pbXBvcnQgeyBCdXR0b24sIE1vZGFsV3JhcHBlciB9IGZyb20gXCIuLi8uLi9Db21wb25lbnRzL1VJL1N0eWxlZENvbnN0YW50c1wiO1xuY29uc3QgaW5pdGlhbEZvcm1EYXRhID0gT2JqZWN0LmZyZWV6ZSh7XG4gIGFkZHJlc3MxOiBcIlwiLFxuICBhZGRyZXNzMjogXCJcIixcbiAgZG9iOiBcIllZWVktTU0tRERcIixcbiAgZW1haWw6IFwiXCIsXG4gIGZpcnN0TmFtZTogXCJcIixcbiAgbGFuZG1hcms6IFwiXCIsXG4gIGxhbmdLZXk6IFwiZW5cIixcbiAgbGFzdE5hbWU6IFwiXCIsXG4gIG90cDogXCJcIixcbiAgcGhvbmVOdW1iZXI6IFwiXCIsXG4gIHBpbmNvZGU6IFwiXCIsXG4gIHFyQ29kZUlkOiBcIlwiLFxuICByb2xlOiBcIlwiLFxuICB0ZW5hbnRJZDogMCxcbiAgdXNlck5hbWU6IFwiXCIsXG59KTtcblxuY29uc3QgQWRkVXNlckZvcm0gPSAocHJvcHMpID0+IHtcbiAgY29uc3Qge1xuICAgIGVkaXRVc2VyRGF0YSxcbiAgICB1c2VyVG9CZUVkaXQsXG4gICAgY2xvc2VQb3BVcEhhbmRsZXIsXG4gICAgZmV0Y2hVc2Vyc0RhdGEsXG4gIH0gPSBwcm9wcztcbiAgY29uc3QgW2Zvcm1EYXRhLCB1cGRhdGVGb3JtRGF0YV0gPSB1c2VTdGF0ZShpbml0aWFsRm9ybURhdGEpO1xuICBjb25zdCBbZWRpdEZvcm1EYXRhLCB1cGRhdGVFZGl0Rm9ybURhdGFdID0gdXNlU3RhdGUoaW5pdGlhbEZvcm1EYXRhKTtcbiAgY29uc3QgW2Vycm9ycywgdXBkYXRlRXJyb3JdID0gdXNlU3RhdGUoW10pO1xuICBjb25zdCBbc3VjY2VzcywgdXBkYXRlU3VjY2Vzc10gPSB1c2VTdGF0ZShcIlwiKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChlZGl0VXNlckRhdGEpIHtcbiAgICAgIHVwZGF0ZUZvcm1EYXRhKHtcbiAgICAgICAgLi4uZWRpdFVzZXJEYXRhLFxuICAgICAgfSk7XG4gICAgfVxuICB9LCBbZWRpdFVzZXJEYXRhXSk7XG5cbiAgY29uc3QgaGFuZGxlQ2hhbmdlID0gKGV2ZW50KSA9PiB7XG4gICAgdXBkYXRlRm9ybURhdGEoe1xuICAgICAgLi4uZm9ybURhdGEsXG4gICAgICBbZXZlbnQudGFyZ2V0Lm5hbWVdOiBldmVudC50YXJnZXQudmFsdWUsXG4gICAgfSk7XG4gIH07XG5cbiAgY29uc3QgdXBkYXRlVXNlciA9ICgpID0+IHtcbiAgICBjb25zdCBhcGkgPSBuZXcgUmVxdWVzdChcIlwiLCBzdWNjZXNzSGFuZGxlciwgZXJyb3JIYW5kbGVyLCBmYWxzZSk7XG4gICAgcmV0dXJuIGFwaS5wb3N0KGAke3VybHMubG9naW4uQkFTRV9VUkx9JHt1cmxzLlVzZXIuVVBEQVRFX1VTRVJ9YCwgZm9ybURhdGEpO1xuICB9O1xuXG4gIGNvbnN0IGVycm9ySGFuZGxlciA9IChlcnJvcikgPT4ge1xuICAgIC8vIHtcInRpbWVzdGFtcFwiOlwiMjAyMS0wOS0xOFQwNjoyNTozNS41MDUrMDA6MDBcIixcInN0YXR1c1wiOjQwMSxcImVycm9yXCI6XCJVbmF1dGhvcml6ZWRcIixcIm1lc3NhZ2VcIjpcIlwiLFwicGF0aFwiOlwiL2FwaS91c2Vyc1wifVxuICAgIGNvbnN0IGVycm9ycyA9IFtdO1xuICAgIGlmIChlcnJvciAmJiBlcnJvci5zdGF0dXMgPT0gNDAwKSB7XG4gICAgICBpZiAoZXJyb3IuZmllbGRFcnJvcnMgJiYgZXJyb3IuZmllbGRFcnJvcnMgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICBlcnJvci5maWVsZEVycm9ycy5mb3JFYWNoKChpdGVtKSA9PlxuICAgICAgICAgIGVycm9ycy5wdXNoKGAke2l0ZW0uZmllbGR9OiAke2l0ZW0ubWVzc2FnZX1gKVxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgaWYgKGVycm9ycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHVwZGF0ZUVycm9yKGVycm9ycyk7XG4gICAgICAgIHdpbmRvdy5zY3JvbGxUbygxMDAsIDEwMCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChlcnJvciAmJiBlcnJvci5zdGF0dXMgPT0gNDAxKSB7XG4gICAgICB1cGRhdGVFcnJvcihbZXJyb3IuZXJyb3JdKTtcbiAgICAgIHdpbmRvdy5zY3JvbGxUbygxMDAsIDEwMCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHN1Y2Nlc3NIYW5kbGVyID0gKGRhdGEpID0+IHtcbiAgICBpZiAoIWRhdGEuc3VjY2Vzcykge1xuICAgICAgdXBkYXRlRXJyb3IoW2RhdGEubXNnXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHVwZGF0ZUVycm9yKFtdKTtcbiAgICAgIHVwZGF0ZVN1Y2Nlc3MoZGF0YS5tc2cpO1xuICAgICAgY2xvc2VQb3BVcEhhbmRsZXIoKTtcbiAgICAgIHJlbW92ZU92ZXJsYXkoKTtcbiAgICAgIGZldGNoVXNlcnNEYXRhKCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHN1Ym1pdEZvcm1IYW5kbGVyID0gKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIGlmIChlZGl0VXNlckRhdGEpIHtcbiAgICAgIHVwZGF0ZVVzZXIoKTtcbiAgICB9XG5cbiAgICBmb3JtRGF0YS51c2VyTmFtZSA9IGZvcm1EYXRhLnBob25lTnVtYmVyO1xuXG4gICAgLy8gcHJpY2luZ1Rva2VuO1xuXG4gICAgY29uc3QgYXBpID0gbmV3IFJlcXVlc3QoXCJcIiwgc3VjY2Vzc0hhbmRsZXIsIGVycm9ySGFuZGxlciwgZmFsc2UpO1xuICAgIHJldHVybiBhcGkucG9zdCh1cmxzLmxvZ2luLkJBU0VfVVJMICsgdXJscy5Vc2VyLkNSRUFURV9ORVdfVVNFUiwgZm9ybURhdGEpO1xuICB9O1xuXG4gIGxldCBlcnJvckhUTUwgPSBcIlwiO1xuICBsZXQgZXJyb3JTdHlsZXMgPSBcIlwiO1xuICBsZXQgc3VjY2Vzc1N0eWxlcyA9IFwiXCI7XG4gIGlmIChlcnJvcnMubGVuZ3RoID4gMCkge1xuICAgIGVycm9ySFRNTCA9IGVycm9ycy5tYXAoKHZhbCkgPT4gPGxpIGtleT17dmFsfT57dmFsfTwvbGk+KTtcbiAgICBlcnJvclN0eWxlcyA9IHtcbiAgICAgIGNvbG9yOiBcInJlZFwiLFxuICAgICAgZm9udFNpemU6IFwiMTRweFwiLFxuICAgICAgbWFyZ2luVG9wOiBcIjI2cHhcIixcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHN1Y2Nlc3NTdHlsZXMgPSB7XG4gICAgICBjb2xvcjogXCJncmVlblwiLFxuICAgICAgZm9udFNpemU6IFwiMTRweFwiLFxuICAgICAgbWFyZ2luVG9wOiBcIjI2cHhcIixcbiAgICB9O1xuICB9XG5cbiAgY29uc29sZS5sb2coXCJlZGl0VXNlckRhdGFcIiwgZWRpdFVzZXJEYXRhKTtcblxuICByZXR1cm4gKFxuICAgIDxNb2RhbFdyYXBwZXI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWRpYWxvZ1wiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWNvbnRlbnRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWhlYWRlclwiPlxuICAgICAgICAgICAgPGg0IGNsYXNzTmFtZT1cIm1vZGFsLXRpdGxlXCI+QWRkIFVzZXI8L2g0PlxuICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY2xvc2VcIlxuICAgICAgICAgICAgICBvbkNsaWNrPXtjbG9zZVBvcFVwSGFuZGxlcn1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+JnRpbWVzOzwvc3Bhbj5cbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtYm9keVwiPlxuICAgICAgICAgICAgPGZvcm0gb25TdWJtaXQ9e3N1Ym1pdEZvcm1IYW5kbGVyfT5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3cgcGIxNlwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLTZcIj5cbiAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJleGFtcGxlSW5wdXRFbWFpbDFcIj5GaXJzdCBOYW1lPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiRmlyc3QgTmFtZVwiXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJmaXJzdE5hbWVcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Zm9ybURhdGEgJiYgZm9ybURhdGEuZmlyc3ROYW1lfVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC02XCI+XG4gICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiZXhhbXBsZUlucHV0RW1haWwxXCI+TGFzdCBOYW1lPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiTGFzdCBOYW1lXCJcbiAgICAgICAgICAgICAgICAgICAgbmFtZT1cImxhc3ROYW1lXCJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2Zvcm1EYXRhICYmIGZvcm1EYXRhLmxhc3ROYW1lfVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93IHBiMTZcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC0xMlwiPlxuICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImV4YW1wbGVJbnB1dEVtYWlsMVwiPkVtYWlsIElkPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwiZW1haWxcIlxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIkVtYWlsIElkXCJcbiAgICAgICAgICAgICAgICAgICAgbmFtZT1cImVtYWlsXCJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2Zvcm1EYXRhICYmIGZvcm1EYXRhLmVtYWlsfVxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93IHBiMTZcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC02XCI+XG4gICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiZXhhbXBsZUlucHV0RW1haWwxXCI+RE9CPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwiZGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJkb2JcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Zm9ybURhdGEuZG9ifVxuICAgICAgICAgICAgICAgICAgICBtaW49XCIxOTUwLTAxLTAxXCJcbiAgICAgICAgICAgICAgICAgICAgbWF4PVwiMjAwMC0xMi0zMVwiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLTZcIj5cbiAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJleGFtcGxlSW5wdXRFbWFpbDFcIj5Nb2JpbGU8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIk1vYmlsZVwiXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJwaG9uZU51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXtmb3JtRGF0YSAmJiBmb3JtRGF0YS5waG9uZU51bWJlcn1cbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvdyBwYjE2XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtMTJcIj5cbiAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJleGFtcGxlSW5wdXRFbWFpbDFcIj5BZGRyZXNzMTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIkFkZHJlc3MxXCJcbiAgICAgICAgICAgICAgICAgICAgbmFtZT1cImFkZHJlc3MxXCJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2Zvcm1EYXRhICYmIGZvcm1EYXRhLmFkZHJlc3MxfVxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93IHBiMTZcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC0xMlwiPlxuICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImV4YW1wbGVJbnB1dEVtYWlsMVwiPkFkZHJlc3MyPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiQWRkcmVzczJcIlxuICAgICAgICAgICAgICAgICAgICBuYW1lPVwiYWRkcmVzczJcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Zm9ybURhdGEgJiYgZm9ybURhdGEuYWRkcmVzczJ9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3cgcGIxNlwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLTZcIj5cbiAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJleGFtcGxlSW5wdXRFbWFpbDFcIj5MYW5kIE1hcms8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCJcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJMYW5kIE1hcmtcIlxuICAgICAgICAgICAgICAgICAgICBuYW1lPVwibGFuZG1hcmtcIlxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Zm9ybURhdGEgJiYgZm9ybURhdGEubGFuZG1hcmt9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLTZcIj5cbiAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJleGFtcGxlSW5wdXRFbWFpbDFcIj5QaW4gQ29kZTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiUGluIENvZGVcIlxuICAgICAgICAgICAgICAgICAgICBuYW1lPVwicGluY29kZVwiXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXtmb3JtRGF0YSAmJiBmb3JtRGF0YS5waW5jb2RlfVxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93IHBiMTZcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC0xMlwiPlxuICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImV4YW1wbGVGb3JtQ29udHJvbFNlbGVjdDFcIj5Vc2VyIFJvbGU8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICAgICAgICBuYW1lPVwicm9sZVwiXG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJcIj5DaG9vc2UgUm9sZTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgdmFsdWU9XCJQVE1fVkVORE9SXCJcbiAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZD17XG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0VXNlckRhdGEgJiYgZWRpdFVzZXJEYXRhLnJvbGUgPT0gXCJQVE1fVkVORE9SXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPyB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICBWZW5kb3JcbiAgICAgICAgICAgICAgICAgICAgPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb25cbiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT1cIlBUTV9TVUJfQURNSU5cIlxuICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkPXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRVc2VyRGF0YSAmJiBlZGl0VXNlckRhdGEucm9sZSA9PSBcIlBUTV9TVUJfQURNSU5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICA/IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIFN1YiBBZG1pblxuICAgICAgICAgICAgICAgICAgICA8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW0tY2VudGVyIGp1c3RpZnktY2VudGVyIGdhcDE2XCI+XG4gICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4tZGFuZ2VyXCJcbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2Nsb3NlUG9wVXBIYW5kbGVyfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIENsb3NlXG4gICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgPEJ1dHRvbiB0eXBlPVwic3VibWl0XCIgY2xhc3NOYW1lPVwiYnRuLXN1Y2Nlc3NcIj5cbiAgICAgICAgICAgICAgICAgIHtlZGl0VXNlckRhdGEgPyBcIlVwZGF0ZSBVc2VyXCIgOiBcIlNhdmUgVXNlclwifVxuICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZm9ybT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L01vZGFsV3JhcHBlcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFkZFVzZXJGb3JtO1xuXG5cblxuLy8ge21vZGFsICYmXG4vLyAgIDxNb2RhbFdyYXBwZXI+XG4vLyAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1kaWFsb2dcIj5cbi8vICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtY29udGVudFwiPlxuLy8gICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWhlYWRlclwiPlxuLy8gICAgICAgICAgIDxoND5DaGFuZ2UgQWN0aXZlIFFSIENvZGU8L2g0PlxuLy8gICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1ib2R5XCI+XG4vLyAgICAgICAgICAgPENoYW5nZVFyV3JhcHBlcj5cbi8vICAgICAgICAgICAgIDxzZWxlY3Rcbi8vICAgICAgICAgICAgICAgbmFtZT1cInFyQ29kZVwiXG4vLyAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZvcm0tY29udHJvbFwiXG4vLyAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0UXJDb2RlKGUudGFyZ2V0LnZhbHVlKX1cbi8vICAgICAgICAgICAgID5cbi8vICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlwiPlNlbGVjdCBRUiBDb2RlPC9vcHRpb24+XG4vLyAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJRUiBDb2RlIDFcIj5RUiBDb2RlIDE8L29wdGlvbj5cbi8vICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlFSIENvZGUgMlwiPlFSIENvZGUgMjwvb3B0aW9uPlxuLy8gICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiUVIgQ29kZSAzXCI+UVIgQ29kZSAzPC9vcHRpb24+XG4vLyAgICAgICAgICAgICA8L3NlbGVjdD5cbi8vICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicXItaW1hZ2UgZmxleCBpdGVtLWNlbnRlciBqdXN0aWZ5LWNlbnRlclwiPlxuLy8gICAgICAgICAgICAgICA8aW1nIHNyYz1cImh0dHBzOi8vc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9wdG0tYXNzZXRzLXByb2QvaWNvbnMveWVzLXBheXRtLnBuZ1wiIGFsdD1cIlwiIC8+XG4vLyAgICAgICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtLWNlbnRlciBqdXN0aWZ5LWNlbnRlclwiPlxuLy8gICAgICAgICAgICAgICA8QnV0dG9uIGNsYXNzTmFtZT1cImJ0bi1zdWNjZXNzXCI+Q2hhbmdlIFFSIENvZGU8L0J1dHRvbj5cbi8vICAgICAgICAgICAgIDwvZGl2PlxuLy8gICAgICAgICAgIDwvQ2hhbmdlUXJXcmFwcGVyPlxuLy8gICAgICAgICA8L2Rpdj5cbi8vICAgICAgIDwvZGl2PlxuLy8gICAgIDwvZGl2PlxuXG4vLyAgIDwvTW9kYWxXcmFwcGVyPlxuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBSZXF1ZXN0IGZyb20gXCIuLi8uLi91dGlscy9SZXF1ZXN0XCI7XG5pbXBvcnQgdXJscyBmcm9tIFwiLi4vLi4vdXRpbHMvdXJsc1wiO1xuaW1wb3J0IHsgZ2V0QXV0aFRva2VuIH0gZnJvbSBcIi4uLy4uL3V0aWxzL2NvbW1vblwiO1xuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuaW1wb3J0IHsgQnV0dG9uLCBNb2RhbFdyYXBwZXIgfSBmcm9tIFwiLi4vLi4vQ29tcG9uZW50cy9VSS9TdHlsZWRDb25zdGFudHNcIjtcblxuY29uc3QgUGVybWlzc2lvbkZvcm0gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgeyB1c2VySWQsIGNsb3NlUG9wVXBIYW5kbGVyIH0gPSBwcm9wcztcbiAgY29uc3QgW3Blcm1pc3Npb25zLCBzZXRQZXJtaXNzaW9uc10gPSB1c2VTdGF0ZShcIlwiKTtcbiAgY29uc3QgW21lc3NhZ2UsIHNldE1lc3NhZ2VdID0gdXNlU3RhdGUoeyBlcnJvcjogXCJcIiwgc3VjY2VzczogXCJcIiB9KTtcblxuICBjb25zdCBmZXRjaFBlcm1pc3Npb25zID0gKCkgPT4ge1xuICAgIGNvbnN0IHN1Y2Nlc3NIYW5kbGVyID0gKHJlcykgPT4ge1xuICAgICAgLy8gY29uc29sZS5sb2coXCJzdWNjZXNzXCIsIHJlcyk7XG4gICAgICBpZiAocmVzKSB7XG4gICAgICAgIHNldFBlcm1pc3Npb25zKHJlcyk7XG4gICAgICAgIHVwZGF0ZUZvcm1EYXRhKHJlcy5hY3RpdmVQZXJtaXNzaW9ucyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIEF1dGhvcml6YXRpb246IGdldEF1dGhUb2tlbigpLFxuICAgICAgICBcImFwaS1BdXRob3JpemF0aW9uXCI6IGdldEF1dGhUb2tlbihcImFwaS1BdXRob3JpemF0aW9uXCIpLFxuICAgICAgfSxcbiAgICB9O1xuXG4gICAgY29uc3QgcHJvbWlzZTEgPSBheGlvc1xuICAgICAgLmdldChgJHt1cmxzLmxvZ2luLkJBU0VfVVJMfSR7dXJscy5Vc2VyLkdFVF9BTExfUEVSTUlTSVNTSU9OU31gLCBvcHRpb25zKVxuICAgICAgLmNhdGNoKCgpID0+IFwiXCIpO1xuXG4gICAgY29uc3QgcHJvbWlzZTIgPSBheGlvc1xuICAgICAgLmdldChcbiAgICAgICAgYCR7dXJscy5sb2dpbi5CQVNFX1VSTH0ke3VybHMuVXNlci5NQU5BR0VfVVNFUl9QRVJNSVNTSU9OU30/dXNlck5hbWU9JHt1c2VySWR9YCxcbiAgICAgICAgb3B0aW9uc1xuICAgICAgKVxuICAgICAgLmNhdGNoKCgpID0+IFwiXCIpO1xuXG4gICAgYXhpb3NcbiAgICAgIC5hbGwoW3Byb21pc2UxLCBwcm9taXNlMl0pXG4gICAgICAudGhlbihcbiAgICAgICAgYXhpb3Muc3ByZWFkKCguLi5yZXNwb25zZXMpID0+IHtcbiAgICAgICAgICBjb25zdCBhbGxQZXJtaXNzaW9ucyA9IHJlc3BvbnNlc1swXSAmJiByZXNwb25zZXNbMF0uZGF0YS5kYXRhO1xuICAgICAgICAgIGNvbnN0IGFjdGl2ZVBlcm1pc3Npb25zID0gcmVzcG9uc2VzWzFdICYmIHJlc3BvbnNlc1sxXS5kYXRhLmRhdGE7XG5cbiAgICAgICAgICBzdWNjZXNzSGFuZGxlcih7XG4gICAgICAgICAgICBhbGxQZXJtaXNzaW9uczogYWxsUGVybWlzc2lvbnMsXG4gICAgICAgICAgICBhY3RpdmVQZXJtaXNzaW9uczogYWN0aXZlUGVybWlzc2lvbnMsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgICApXG4gICAgICAuY2F0Y2goKGVycm9ycykgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcInJlc3BvbnNlT25lIGVycm9yc1wiLCBlcnJvcnMpO1xuICAgICAgfSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBmZXRjaFBlcm1pc3Npb25zKCk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBoYW5kbGVDbGljayA9IChldmVudCwgcGVybUtleSkgPT4ge1xuICAgIC8vIGNvbnNvbGUubG9nKFxuICAgIC8vICAgYWN0aXZlUGVybWlzc2lvbnMsXG4gICAgLy8gICBwZXJtS2V5LFxuICAgIC8vICAgZXZlbnQudGFyZ2V0Lm5hbWUsXG4gICAgLy8gICBldmVudC50YXJnZXQuY2hlY2tlZFxuICAgIC8vICk7XG5cbiAgICBjb25zdCBhY3RpdmVQZXJtaXNzaW9uc0NvcHkgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGFjdGl2ZVBlcm1pc3Npb25zKSk7XG4gICAgaWYgKGV2ZW50LnRhcmdldC5jaGVja2VkKSB7XG4gICAgICBpZiAoYWN0aXZlUGVybWlzc2lvbnNDb3B5W3Blcm1LZXldKSB7XG4gICAgICAgIGFjdGl2ZVBlcm1pc3Npb25zQ29weVtwZXJtS2V5XS5wdXNoKGV2ZW50LnRhcmdldC5uYW1lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFjdGl2ZVBlcm1pc3Npb25zQ29weVtwZXJtS2V5XSA9IFtldmVudC50YXJnZXQubmFtZV07XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGZpbHRlcmVkQXJyYXkgPSBhY3RpdmVQZXJtaXNzaW9uc0NvcHlbcGVybUtleV0uZmlsdGVyKFxuICAgICAgICAoaXRlbSkgPT4gaXRlbSAhPSBldmVudC50YXJnZXQubmFtZVxuICAgICAgKTtcblxuICAgICAgYWN0aXZlUGVybWlzc2lvbnNDb3B5W3Blcm1LZXldID0gZmlsdGVyZWRBcnJheTtcbiAgICB9XG4gICAgc2V0UGVybWlzc2lvbnMoe1xuICAgICAgLi4ucGVybWlzc2lvbnMsXG4gICAgICBhY3RpdmVQZXJtaXNzaW9uczogYWN0aXZlUGVybWlzc2lvbnNDb3B5LFxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IHN1Ym1pdEZvcm1IYW5kbGVyID0gKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB7IGFjdGl2ZVBlcm1pc3Npb25zIH0gPSBwZXJtaXNzaW9ucztcblxuICAgIGNvbnNvbGUubG9nKFwic3VibWl0Rm9ybUhhbmRsZXJcIiwgYWN0aXZlUGVybWlzc2lvbnMpO1xuXG4gICAgbGV0IG5ld1Blcm1pc3Npb25zID0gW107XG5cbiAgICBPYmplY3Qua2V5cyhhY3RpdmVQZXJtaXNzaW9ucykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICBuZXdQZXJtaXNzaW9ucyA9IG5ld1Blcm1pc3Npb25zLmNvbmNhdChhY3RpdmVQZXJtaXNzaW9uc1trZXldKTtcbiAgICB9KTtcblxuICAgIGNvbnNvbGUubG9nKFwibmV3UGVybWlzc2lvbnNcIiwgbmV3UGVybWlzc2lvbnMpO1xuICAgIGNvbnN0IGZvcm1EYXRhID0ge1xuICAgICAgdXNlck5hbWU6IHVzZXJJZCxcbiAgICAgIGFkZEFwaUNvZGU6IG5ld1Blcm1pc3Npb25zLFxuICAgIH07XG5cbiAgICBjb25zdCBzdWJtaXRTdWNjZXNzID0gKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5zdWNjZXNzKSB7XG4gICAgICAgIHNldE1lc3NhZ2UoeyBzdWNjZXNzOiByZXMubXNnLCBlcnJvcjogXCJcIiB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldE1lc3NhZ2UoeyBlcnJvcjogcmVzLm1zZywgc3VjY2VzczogXCJcIiB9KTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHN1Ym1pdEVycm9yID0gKHJlcykgPT4ge1xuICAgICAgc2V0TWVzc2FnZSh7IGVycm9yOiByZXMubXNnLCBzdWNjZXNzOiBcIlwiIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCBhcGkgPSBuZXcgUmVxdWVzdChcIlwiLCBzdWJtaXRTdWNjZXNzLCBzdWJtaXRFcnJvciwgZmFsc2UpO1xuICAgIHJldHVybiBhcGkucG9zdChcbiAgICAgIHVybHMubG9naW4uQkFTRV9VUkwgKyB1cmxzLlVzZXIuTUFOQUdFX1VTRVJfUEVSTUlTU0lPTlMsXG4gICAgICBmb3JtRGF0YVxuICAgICk7XG4gIH07XG5cbiAgY29uc3QgeyBhbGxQZXJtaXNzaW9ucywgYWN0aXZlUGVybWlzc2lvbnMgfSA9IHBlcm1pc3Npb25zO1xuICBjb25zb2xlLmxvZyhcInBlcm1pc3Npb25zXCIsIGFjdGl2ZVBlcm1pc3Npb25zKTtcblxuICBjb25zdCBkYXRhID0gW107XG5cbiAgY29uc3QgcGVybUtleXMgPSBhbGxQZXJtaXNzaW9ucyA/IE9iamVjdC5rZXlzKGFsbFBlcm1pc3Npb25zKSA6IFwiXCI7XG5cbiAgcmV0dXJuIChcbiAgICA8TW9kYWxXcmFwcGVyPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1kaWFsb2dcIiByb2xlPVwiZG9jdW1lbnRcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1jb250ZW50XCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1oZWFkZXJcIj5cbiAgICAgICAgICAgIDxoNCBjbGFzc05hbWU9XCJtb2RhbC10aXRsZVwiIGlkPVwiZXhhbXBsZU1vZGFsTGFiZWxcIj5cbiAgICAgICAgICAgICAgTWFuYWdlIFBlcm1pc3Npb25zXG4gICAgICAgICAgICA8L2g0PlxuICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY2xvc2VcIlxuICAgICAgICAgICAgICBvbkNsaWNrPXtjbG9zZVBvcFVwSGFuZGxlcn1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+JnRpbWVzOzwvc3Bhbj5cbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1ib2R5XCI+XG4gICAgICAgICAgICA8Zm9ybSBvblN1Ym1pdD17c3VibWl0Rm9ybUhhbmRsZXJ9PlxuXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGIxNlwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXttZXNzYWdlLnN1Y2Nlc3MgPyBcImRvbmVcIiA6IFwiZmFpbFwifT5cbiAgICAgICAgICAgICAgICAgIHttZXNzYWdlLnN1Y2Nlc3MgfHwgbWVzc2FnZS5lcnJvcn1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB7cGVybUtleXMgJiYgQXJyYXkuaXNBcnJheShwZXJtS2V5cykgPyAoXG4gICAgICAgICAgICAgICAgICBwZXJtS2V5cy5tYXAoKHBlcm1LZXkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzTmFtZT1cInB5OFwiPntwZXJtS2V5fTwvaDY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwicGwxNlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICB7YWxsUGVybWlzc2lvbnMgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGxQZXJtaXNzaW9uc1twZXJtS2V5XSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmlzQXJyYXkoYWxsUGVybWlzc2lvbnNbcGVybUtleV0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBhbGxQZXJtaXNzaW9uc1twZXJtS2V5XS5tYXAoKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzc05hbWU9XCJweTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPXtpdGVtfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZVBlcm1pc3Npb25zICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlUGVybWlzc2lvbnNbcGVybUtleV0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmVQZXJtaXNzaW9uc1twZXJtS2V5XS5pbmNsdWRlcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KGV2ZW50KSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVDbGljayhldmVudCwgcGVybUtleSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IG1hcmdpblJpZ2h0OiBcIjEwcHhcIiB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2l0ZW1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9fL2csIFwiIFwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoXCJQVE0gXCIsIFwiXCIpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogXCJcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiBcIjE2N3B4IDAgMTU2cHggMFwiLFxuICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiBcIjI2cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwiIzBhYWFiYVwiLFxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICBMb2FkaW5nLi4uLlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBnYXAxNlwiPlxuICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuLWxpZ2h0XCJcbiAgICAgICAgICAgICAgICAgIGRhdGEtZGlzbWlzcz1cIm1vZGFsXCJcbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2Nsb3NlUG9wVXBIYW5kbGVyfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIENsb3NlXG4gICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgPEJ1dHRvbiB0eXBlPVwic3VibWl0XCIgY2xhc3NOYW1lPVwiYnRuLXN1Y2Nlc3NcIj5cbiAgICAgICAgICAgICAgICAgIFVwZGF0ZSBQZXJtaXNzaW9uc1xuICAgICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZm9ybT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L01vZGFsV3JhcHBlcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBlcm1pc3Npb25Gb3JtO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBBUElTIGZyb20gXCIuLi8uLi91dGlscy91cmxzXCI7XG5pbXBvcnQgUmVxdWVzdCBmcm9tIFwiLi4vLi4vdXRpbHMvUmVxdWVzdFwiO1xuaW1wb3J0IHsgQnV0dG9uLCBNb2RhbFdyYXBwZXIgfSBmcm9tIFwiLi4vLi4vQ29tcG9uZW50cy9VSS9TdHlsZWRDb25zdGFudHNcIjtcblxuZnVuY3Rpb24gQWRtaW5GdW5kRm9ybSh7XG4gIHVzZXJJZCxcbiAgY2xvc2VBZG1pbkZ1bmRGb3JtLFxuICBzZXRTdGF0dXNNc2csXG4gIHN1Y2Nlc3NDYWxsQmFjayxcbn0pIHtcbiAgY29uc3QgW2Zvcm1EYXRhLCBzZXRGb3JtRGF0YV0gPSB1c2VTdGF0ZSh7XG4gICAgYW1vdW50OiBcIlwiLFxuICAgIHJlbWFyazogXCJcIixcbiAgICBld2FsbGV0VHlwZTogXCJNQUlOX1dBTExFVFwiLFxuICAgIHVzZXJJZDogdXNlcklkLFxuICB9KTtcbiAgY29uc3Qgd2FsbGV0U2VsZWN0ID0gdXNlUmVmKCk7XG5cbiAgY29uc3Qgc3VibWl0Rm9ybUhhbmRsZXIgPSAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IHdhbGxldEFjdGlvbiA9IHdhbGxldFNlbGVjdC5jdXJyZW50LnZhbHVlO1xuICAgIGNvbnN0IHJlcXVlc3QgPSBuZXcgUmVxdWVzdChcIlwiLCBzdWNjZXNzSGFuZGxlciwgZXJyb3JIYW5kbGVyLCB0cnVlKTtcbiAgICBsZXQgd2FsbGV0QVBJID0gYCR7QVBJUy5sb2dpbi5CQVNFX1VSTH0ke0FQSVMuV2FsbGV0Lk1BTkFHRV9XQUxMRVR9YC5yZXBsYWNlKFxuICAgICAgXCJ7YWN0aW9uVHlwZX1cIixcbiAgICAgIHdhbGxldEFjdGlvblxuICAgICk7XG5cbiAgICBmb3JtRGF0YS5hbW91bnQgPSBwYXJzZUludChmb3JtRGF0YS5hbW91bnQpO1xuICAgIHJlcXVlc3QucG9zdCh3YWxsZXRBUEksIGZvcm1EYXRhKTtcbiAgfTtcbiAgY29uc3Qgc3VjY2Vzc0hhbmRsZXIgPSAocmVzcG9uc2UsIGhlYWRlcnMpID0+IHtcbiAgICBpZiAocmVzcG9uc2Uuc3VjY2Vzcykge1xuICAgICAgY2xvc2VBZG1pbkZ1bmRGb3JtKCk7XG4gICAgICBzdWNjZXNzQ2FsbEJhY2soKTtcbiAgICAgIHNldFN0YXR1c01zZyhcIkFjdGlvbiB0byB3YWxsZXQgaXMgc3VibWl0dGVkIHN1Y2Nlc3NmdWxseVwiKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgZXJyb3JIYW5kbGVyID0gKGVycm9yKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJmYWlsZWQgY2FsbFwiKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVDaGFuZ2UgPSAoZXZlbnQpID0+IHtcbiAgICBzZXRGb3JtRGF0YSgocHJldlN0YXRlKSA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5wcmV2U3RhdGUsXG4gICAgICAgIFtldmVudC50YXJnZXQubmFtZV06IGV2ZW50LnRhcmdldC52YWx1ZSxcbiAgICAgIH07XG4gICAgfSk7XG4gIH07XG5cbiAgY29uc29sZS5sb2coXCJmb3JtRGF0YVwiLCBmb3JtRGF0YSk7XG5cbiAgcmV0dXJuIChcbiAgICA8TW9kYWxXcmFwcGVyPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1kaWFsb2dcIiByb2xlPVwiZG9jdW1lbnRcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1jb250ZW50XCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1oZWFkZXJcIj5cbiAgICAgICAgICAgIDxoNCBjbGFzc05hbWU9XCJtb2RhbC10aXRsZVwiPlxuICAgICAgICAgICAgICBBZGQgRnVuZFxuICAgICAgICAgICAgPC9oND5cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNsb3NlXCJcbiAgICAgICAgICAgICAgb25DbGljaz17Y2xvc2VBZG1pbkZ1bmRGb3JtfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj4mdGltZXM7PC9zcGFuPlxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWJvZHlcIj5cbiAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXsoZXZlbnQpID0+IHN1Ym1pdEZvcm1IYW5kbGVyKGV2ZW50KX0+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGIxNlwiPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwibGFiZWxcIj5BbW91bnQ8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZvcm0tY29udHJvbFwiXG4gICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJBbW91bnRcIlxuICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJhbW91bnRcIlxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGIxNlwiPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwibGFiZWxcIj5BY3Rpb248L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8c2VsZWN0XG4gICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgICAgICAgICAgICByZWY9e3dhbGxldFNlbGVjdH1cbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlwiPkNob29zZSBBY3Rpb248L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiZGVwb3NpdFwiPkRlcG9zaXQ8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiZGViaXRcIj5XaXRoZHJhdzwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJob2xkXCI+SG9sZDwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJob2xkLXdpdGhkcmF3XCI+QmxvY2s8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicGIxNlwiPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwibGFiZWxcIj5SZW1hcms8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiUmVtYXJrXCJcbiAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwicmVtYXJrXCJcbiAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbS1jZW50ZXIganVzdGlmeS1jZW50ZXIgZ2FwMTZcIj5cbiAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0bi1saWdodFwiXG4gICAgICAgICAgICAgICAgICBkYXRhLWRpc21pc3M9XCJtb2RhbFwiXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXtjbG9zZUFkbWluRnVuZEZvcm19XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgQ2xvc2VcbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICA8QnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBjbGFzc05hbWU9XCJidG4tc3VjY2Vzc1wiPlxuICAgICAgICAgICAgICAgICAgQWRkIEZ1bmRcbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9Nb2RhbFdyYXBwZXI+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFkbWluRnVuZEZvcm07XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IEFQSVMgZnJvbSBcIi4uLy4uL3V0aWxzL3VybHNcIjtcbmltcG9ydCBSZXF1ZXN0IGZyb20gXCIuLi8uLi91dGlscy9SZXF1ZXN0XCI7XG5pbXBvcnQgeyBNb2RhbFdyYXBwZXIgfSBmcm9tIFwiLi4vLi4vQ29tcG9uZW50cy9VSS9TdHlsZWRDb25zdGFudHNcIjtcblxuZnVuY3Rpb24gV2FsbGV0RGV0YWlscyh7XG4gIHVzZXJJZCxcbiAgY2xvc2VUcmFuc2FjdGlvbkhhbmRsZXIsXG4gIHN1Y2Nlc3NDYWxsQmFjayxcbiAgdXNlcldhbGxldCxcbn0pIHtcbiAgY29uc3QgZmV0Y2hXYWxsZXREZXRhaWxzID0gKCkgPT4ge1xuICAgIGNvbnN0IHJlcXVlc3QgPSBuZXcgUmVxdWVzdChcIlwiLCBzdWNjZXNzSGFuZGxlciwgZXJyb3JIYW5kbGVyLCB0cnVlKTtcbiAgICBsZXQgd2FsbGV0QVBJID0gYCR7QVBJUy5sb2dpbi5CQVNFX1VSTH0ke0FQSVMuV2FsbGV0LlZJRVdfVFJBTlNBQ1RJT05TfWAucmVwbGFjZShcbiAgICAgIFwie3VzZXJJZH1cIixcbiAgICAgIHVzZXJXYWxsZXQudXNlck5hbWVcbiAgICApO1xuXG4gICAgdXNlcldhbGxldC51c2VySWQgPSBwYXJzZUludCh1c2VyV2FsbGV0LnVzZXJJZCk7XG4gICAgcmVxdWVzdC5nZXQod2FsbGV0QVBJKTtcbiAgfTtcbiAgY29uc3Qgc3VjY2Vzc0hhbmRsZXIgPSAocmVzcG9uc2UsIGhlYWRlcnMpID0+IHtcbiAgICBpZiAocmVzcG9uc2Uuc3VjY2Vzcykge1xuICAgICAgc2V0T2J0YWluZWRXYWxsZXREZXRhaWxzKHJlc3BvbnNlLmRhdGEpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBbb2J0YWluZWRXYWxsZXREZXRhaWxzLCBzZXRPYnRhaW5lZFdhbGxldERldGFpbHNdID0gdXNlU3RhdGUoW10pO1xuXG4gIGNvbnN0IGVycm9ySGFuZGxlciA9IChlcnJvcikgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiZmFpbGVkIGNhbGxcIik7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBmZXRjaFdhbGxldERldGFpbHMoKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPE1vZGFsV3JhcHBlcj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtZGlhbG9nXCIgcm9sZT1cImRvY3VtZW50XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtY29udGVudFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtaGVhZGVyXCI+XG4gICAgICAgICAgICA8aDUgY2xhc3NOYW1lPVwibW9kYWwtdGl0bGVcIiBpZD1cImV4YW1wbGVNb2RhbExhYmVsXCI+XG4gICAgICAgICAgICAgIERldGFpbHNcbiAgICAgICAgICAgIDwvaDU+XG4gICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjbG9zZVwiXG4gICAgICAgICAgICAgIGRhdGEtZGlzbWlzcz1cIm1vZGFsXCJcbiAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIkNsb3NlXCJcbiAgICAgICAgICAgICAgb25DbGljaz17Y2xvc2VUcmFuc2FjdGlvbkhhbmRsZXJ9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPiZ0aW1lczs8L3NwYW4+XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLWJvZHlcIj5cbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgIHsvKiA8dHI+XG4gICAgICAgICAgICAgICAgPHRoPlVzZXIgSWQ8L3RoPlxuICAgICAgICAgICAgICAgIDx0aD5UcmFuc2FjdGlvbiBUeXBlPC90aD5cbiAgICAgICAgICAgICAgICA8dGg+QW1vdW50PC90aD5cbiAgICAgICAgICAgICAgICA8dGg+UmVtYXJrcyA8L3RoPlxuICAgICAgICAgICAgICAgIDx0aD5EYXRlPC90aD5cbiAgICAgICAgICAgICAgICA8dGg+SWQ8L3RoPlxuICAgICAgICAgICAgICA8L3RyPiAqL31cbiAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgIHtvYnRhaW5lZFdhbGxldERldGFpbHMubWFwKChkZXRhaWxzKSA9PiB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgICAge09iamVjdC5lbnRyaWVzKGRldGFpbHMpLm1hcCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiA8bGk+e2Ake2tleX0gOiAke3ZhbHVlfWB9PC9saT47XG4gICAgICAgICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgIHsvKiA8bGk+e2RldGFpbC51c2VySWR9PC9saT5cbiAgICAgICAgICAgICAgICAgICAgICA8bGk+e2RldGFpbC50cmFuc2FjdGlvblR5cGV9PC9saT5cbiAgICAgICAgICAgICAgICAgICAgICA8bGk+e2RldGFpbC50cmFuc2FjdGlvbkFtb3V0fTwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgPGxpPntkZXRhaWwucmVtYXJrc308L2xpPlxuICAgICAgICAgICAgICAgICAgICAgIDxsaT57ZGV0YWlsLmNyZWF0ZWREYXRlfTwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgPGxpPntkZXRhaWwudHJhbnNhY3Rpb25JZH08L2xpPlxuICAgICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxiciAvPlxuICAgICAgICAgICAgICAgICAgICAgIDwvbGk+ICovfVxuICAgICAgICAgICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgPHRyIGNsYXNzTmFtZT1cIm1vZGFsLWZvb3RlclwiPlxuICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeSB0aGVtZWJ0biB0cmFuc3BhcmVudFwiXG4gICAgICAgICAgICAgICAgICAgIGRhdGEtZGlzbWlzcz1cIm1vZGFsXCJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17Y2xvc2VUcmFuc2FjdGlvbkhhbmRsZXJ9XG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIENsb3NlXG4gICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9Nb2RhbFdyYXBwZXI+XG4gICk7XG59XG5leHBvcnQgZGVmYXVsdCBXYWxsZXREZXRhaWxzO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBSZXF1ZXN0IGZyb20gXCIuLi8uLi91dGlscy9SZXF1ZXN0XCI7XG5pbXBvcnQgQVBJUyBmcm9tIFwiLi4vLi4vdXRpbHMvdXJsc1wiO1xuaW1wb3J0IHsgZmV0Y2hVc2Vyc0xpc3QgfSBmcm9tIFwiLi4vLi4vYWN0aW9ucy91c2Vyc1wiO1xuaW1wb3J0IFNpZGVCYXIgZnJvbSBcIi4uLy4uL0NvbXBvbmVudHMvU2lkZUJhci9TaWRlQmFyXCI7XG5pbXBvcnQgQnJlYWRDcnVtYiBmcm9tIFwiLi4vLi4vQ29tcG9uZW50cy9CcmVhZENydW1iL0JyZWFkQ3J1bWJcIjtcbmltcG9ydCBBZGRVc2VyRm9ybSBmcm9tIFwiLi9BZGRVc2VyRm9ybVwiO1xuaW1wb3J0IFBlcm1pc3Npb25Gb3JtIGZyb20gXCIuL1Blcm1pc3Npb25Gb3JtXCI7XG5pbXBvcnQgQWRtaW5GdW5kRm9ybSBmcm9tIFwiLi9BZG1pbkZ1bmRGb3JtXCI7XG5cbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcbmltcG9ydCB7IHByaW50UGFnZSwgYWRkT3ZlcmxheSwgcmVtb3ZlT3ZlcmxheSB9IGZyb20gXCIuLi8uLi91dGlscy9jb21tb25cIjtcbmltcG9ydCBXYWxsZXREZXRhaWxzIGZyb20gXCIuL1dhbGxldERldGFpbHNcIjtcbmltcG9ydCB7IEFsZXJ0V3JhcHBlciwgQnV0dG9uLCBUYWJsZVdyYXBwZXIsIFRvb2x0aXBXcmFwcGVyIH0gZnJvbSBcIi4uLy4uL0NvbXBvbmVudHMvVUkvU3R5bGVkQ29uc3RhbnRzXCI7XG5cbmNvbnN0IHJvbGVNYXBwaW5nID0ge1xuICBQVE1fVkVORE9SOiBcIlZlbmRvclwiLFxuICBQVE1fQURNSU46IFwiQWRtaW5cIixcbiAgUFRNX1NVQl9BRE1JTjogXCJTdWIgQWRtaW5cIixcbn07XG5cbmNvbnN0IHN0eWxlcyA9IHtcbiAgaWNvbkNvbnRhaW5lcjoge1xuICAgIHBhZGRpbmc6IFwiMTBweFwiLFxuICAgIGN1cnNvcjogXCJwb2ludGVyXCIsXG4gIH0sXG4gIGJ1bGJDb250YWluZXI6IHtcbiAgICBOOiB7XG4gICAgICBjb2xvcjogXCJncmF5XCIsXG4gICAgICBwYWRkaW5nOiBcIjEwcHhcIixcbiAgICB9LFxuICAgIFk6IHsgY29sb3I6IFwiZ3JlZW5cIiwgcGFkZGluZzogXCIxMHB4XCIgfSxcbiAgfSxcbn07XG5cbmNvbnN0IFVzZXJzID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFtpc1BvcHVwVmlzaWJsZSwgaGFuZGxlUG9wVXBdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbdXNlclN0YXR1cywgc2V0VXNlclN0YXR1c10gPSB1c2VTdGF0ZSh7XG4gICAgdXNlck5hbWU6IFwiXCIsXG4gICAgbXNnOiBcIlwiLFxuICAgIHN0YXR1czogXCJcIixcbiAgfSk7XG5cbiAgY29uc3QgW3RyYW5zYXRpb25Qb3B1cFZpc2libGUsIHNldFRyYW5zYXRpb25Qb3B1cFZpc2libGVdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbdXNlclRyYW5zYWN0aW9uRGV0YWlscywgc2V0VXNlclRyYW5zYWN0aW9uRGV0YWlsc10gPSB1c2VTdGF0ZSh7fSk7XG5cbiAgY29uc3QgW3Nob3dQaG9uZU51bWJlckZpZWxkLCBzZXRTaG93UGhvbmVOdW1iZXJGaWVsZF0gPSB1c2VTdGF0ZSgpO1xuICBjb25zdCBbc3RhdHVzTXNnLCBzZXRTdGF0dXNNc2ddID0gdXNlU3RhdGUoXCJcIik7XG5cbiAgY29uc3QgW3VzZXJUb0JlRWRpdCwgc2V0VXNlcklkXSA9IHVzZVN0YXRlKFwiXCIpO1xuICBjb25zdCBbZWRpdFVzZXJEYXRhLCBzZXRFZGl0VXNlckRhdGFdID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IFtwZXJtaXNzaW9uRGF0YSwgc2V0UGVybWlzc2lvbkRhdGFdID0gdXNlU3RhdGUoe1xuICAgIGlzUG9wdXBWaXNpYmxlOiBmYWxzZSxcbiAgICB1c2VySWQ6IFwiXCIsXG4gIH0pO1xuXG4gIGNvbnN0IFthZG1pbkZvcm1EYXRhLCBzZXRBZG1pbkZvcm1EYXRhXSA9IHVzZVN0YXRlKFwiXCIpO1xuICBjb25zdCBbaXNUb29sdGlwLCBzZXRUb29sdGlwXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICBjb25zdCB7IGRpc3BhdGNoIH0gPSBwcm9wcztcblxuICBjb25zdCBmZXRjaFVzZXJzRGF0YSA9ICgpID0+IHtcbiAgICBkaXNwYXRjaChmZXRjaFVzZXJzTGlzdCgpKTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoVXNlcnNEYXRhKCk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBzaG93VHJhbnNhY3Rpb25IYW5kbGVyID0gKGl0ZW0pID0+IHtcbiAgICBzZXRVc2VyVHJhbnNhY3Rpb25EZXRhaWxzKGl0ZW0pO1xuICAgIHNldFRyYW5zYXRpb25Qb3B1cFZpc2libGUodHJ1ZSk7XG4gICAgYWRkT3ZlcmxheSgpO1xuICB9O1xuICBjb25zdCBjbG9zZVRyYW5zYWN0aW9uSGFuZGxlciA9ICgpID0+IHtcbiAgICBzZXRUcmFuc2F0aW9uUG9wdXBWaXNpYmxlKGZhbHNlKTtcbiAgICByZW1vdmVPdmVybGF5KCk7XG4gIH07XG5cbiAgY29uc3QgZWRpdENsaWNrSGFuZGxlciA9ICh1c2VySWQpID0+IHtcbiAgICBzZXRTaG93UGhvbmVOdW1iZXJGaWVsZChmYWxzZSk7XG4gICAgaGFuZGxlUG9wVXAodHJ1ZSk7XG4gICAgYWRkT3ZlcmxheSgpO1xuICAgIHNldFVzZXJJZCh1c2VySWQpO1xuICAgIGNvbnN0IHN1Y2Nlc3NIYW5kbGVyID0gKHJlc3BvbnNlLCBoZWFkZXJzKSA9PiB7XG4gICAgICBpZiAocmVzcG9uc2Uuc3VjY2VzcyA9PSB0cnVlKSB7XG4gICAgICAgIHNldEVkaXRVc2VyRGF0YShyZXNwb25zZS5kYXRhKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc3QgZXJyb3JIYW5kbGVyID0gKGVycm9yKSA9PiB7IH07XG5cbiAgICBjb25zdCByZXF1ZXN0ID0gbmV3IFJlcXVlc3QoXCJcIiwgc3VjY2Vzc0hhbmRsZXIsIGVycm9ySGFuZGxlciwgZmFsc2UpO1xuICAgIHJldHVybiByZXF1ZXN0LmdldChcbiAgICAgIGAke0FQSVMubG9naW4uQkFTRV9VUkx9JHtBUElTLlVzZXIuRURJVF9VU0VSLnJlcGxhY2UoXCJ7dXNlcklkfVwiLCB1c2VySWQpfWBcbiAgICApO1xuICB9O1xuXG4gIGNvbnN0IGFkbWluRnVuZEZvcm1IYW5kbGVyID0gKHVzZXJJZCkgPT4ge1xuICAgIGFkZE92ZXJsYXkoKTtcbiAgICBzZXRBZG1pbkZvcm1EYXRhKHVzZXJJZCk7XG4gIH07XG5cbiAgY29uc3QgcGVybWlzc2lvbkNsaWNrSGFuZGxlciA9ICh1c2VySWQpID0+IHtcbiAgICBhZGRPdmVybGF5KCk7XG4gICAgc2V0UGVybWlzc2lvbkRhdGEoeyBpc1BvcHVwVmlzaWJsZTogdHJ1ZSwgdXNlcklkOiB1c2VySWQgfSk7XG4gIH07XG5cbiAgY29uc3Qgb3BlblBvcHVwSGFuZGxlciA9ICgpID0+IHtcbiAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoXCJtb2RhbC1vcGVuXCIpO1xuICAgIHNldFNob3dQaG9uZU51bWJlckZpZWxkKHRydWUpO1xuICAgIGhhbmRsZVBvcFVwKHRydWUpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVVzZXJTdGF0dXMgPSAodXNlcklkLCBjdXJlbnRTdGF0dXMpID0+IHtcbiAgICBjb25zdCBzdGF0dXMgPSBjdXJlbnRTdGF0dXMgPT0gXCJOXCIgPyBcIllcIiA6IFwiTlwiO1xuICAgIHNldFRvb2x0aXAoZmFsc2UpO1xuICAgIGNvbnN0IHN1Y2Nlc3NIYW5kbGVyID0gKHJlc3BvbnNlKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhcInJlc3BvbnNlcmVzcG9uc2VcIiwgcmVzcG9uc2UpO1xuICAgICAgaWYgKHJlc3BvbnNlLnN1Y2Nlc3MpIHtcbiAgICAgICAgY29uc3QgbXNnID0gc3RhdHVzID09IFwiTlwiID8gXCJkZWFjdGl2YXRlZFwiIDogXCJhY3RpdmF0ZWRcIjtcbiAgICAgICAgc2V0VG9vbHRpcCh0cnVlKTtcbiAgICAgICAgc2V0VXNlclN0YXR1cyh7XG4gICAgICAgICAgdXNlck5hbWU6IHVzZXJJZCxcbiAgICAgICAgICBzdGF0dXM6IHN0YXR1cyxcbiAgICAgICAgICBtc2c6IDw+VGhpcyB1c2VyIGlzIG5vdyA8c3Ryb25nPnttc2d9PC9zdHJvbmc+PC8+LFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc3QgZXJyb3JIYW5kbGVyID0gKGVycm9yKSA9PiB7IH07XG5cbiAgICBjb25zdCByZXF1ZXN0ID0gbmV3IFJlcXVlc3QoXCJcIiwgc3VjY2Vzc0hhbmRsZXIsIGVycm9ySGFuZGxlciwgZmFsc2UpO1xuICAgIGNvbnN0IHBhcmFtcyA9IGA/dXNlcklkPSR7dXNlcklkfSZzdGF0dXM9JHtzdGF0dXN9YDtcbiAgICByZXR1cm4gcmVxdWVzdC5wdXQoXG4gICAgICBgJHtBUElTLmxvZ2luLkJBU0VfVVJMfSR7QVBJUy5Vc2VyLk1BTkFHRV9VU0VSX1NUQVRVU30ke3BhcmFtc31gXG4gICAgKTtcbiAgfTtcblxuICBjb25zdCBjbG9zZUFkbWluRnVuZFBvcFVwSGFuZGxlciA9ICgpID0+IHtcbiAgICBzZXRBZG1pbkZvcm1EYXRhKFwiXCIpO1xuICAgIHJlbW92ZU92ZXJsYXkoKTtcbiAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbC1vcGVuXCIpO1xuICB9O1xuXG4gIGNvbnN0IGNsb3NlUG9wVXBIYW5kbGVyID0gKCkgPT4ge1xuICAgIHNldEVkaXRVc2VyRGF0YShcIlwiKTtcbiAgICByZW1vdmVPdmVybGF5KCk7XG4gICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWwtb3BlblwiKTtcbiAgICBoYW5kbGVQb3BVcChmYWxzZSk7XG4gIH07XG5cbiAgY29uc3QgY2xvc2VQZXJtaXNzaW9uUG9wdXAgPSAoKSA9PiB7XG4gICAgc2V0UGVybWlzc2lvbkRhdGEoe1xuICAgICAgLi4ucGVybWlzc2lvbkRhdGEsXG4gICAgICB1c2VySWQ6IFwiXCIsXG4gICAgICBpc1BvcHVwVmlzaWJsZTogZmFsc2UsXG4gICAgfSk7XG4gICAgcmVtb3ZlT3ZlcmxheSgpO1xuICB9O1xuXG4gIGNvbnN0IHsgdXNlcnMgfSA9IHByb3BzO1xuXG4gIGxldCB1c2VyRGF0YSA9IHVzZXJzICYmIHVzZXJzLnVzZXJzTGlzdCAmJiB1c2Vycy51c2Vyc0xpc3QuZGF0YTtcblxuICBpZiAodXNlckRhdGEpIHtcbiAgICB1c2VyRGF0YSA9IHVzZXJEYXRhLm1hcCgoaXRlbSkgPT4ge1xuICAgICAgaWYgKGl0ZW0udXNlck5hbWUgPT0gdXNlclN0YXR1cy51c2VyTmFtZSkge1xuICAgICAgICBpdGVtLmlzQWN0aXZlID0gdXNlclN0YXR1cy5zdGF0dXM7XG4gICAgICB9XG4gICAgICByZXR1cm4gaXRlbTtcbiAgICB9KTtcbiAgfVxuXG4gIC8vIHVzZUVmZmVjdCgoKSA9PiB7XG4gIC8vICAgaWYoaXNUb29sdGlwKSB7XG4gIC8vICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgLy8gICAgICAgc2V0VG9vbHRpcChmYWxzZSk7XG4gIC8vICAgICB9LCAyMDAwKVxuICAvLyAgIH1cbiAgLy8gfSwgW2lzVG9vbHRpcF0pXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZihzdGF0dXNNc2cpIHtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBzZXRTdGF0dXNNc2coXCJcIik7XG4gICAgICB9LCAzMDAwKVxuICAgIH1cbiAgfSwgW3N0YXR1c01zZ10pXG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEJyZWFkQ3J1bWIgaGVhZGluZz1cIlVzZXJzXCIgdmFsdWU9XCJVc2Vyc1wiIC8+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtd3JhcHBlciBmbGV4LWNvbHVtbiBtYi00XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FyZC1oZWFkZXIgZmxleCBpdGVtLWNlbnRlciBzcGFjZS1iZXR3ZWVuXCI+XG4gICAgICAgICAgPGg0IGNsYXNzTmFtZT1cImNhcmQtdGl0bGVcIj5Vc2VycyBMaXN0PC9oND5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZ2FwNFwiPlxuICAgICAgICAgICAgPEJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3NOYW1lPVwiYnRuLXNvZnQtc3VjY2Vzc1wiPkNTVjwvQnV0dG9uPlxuICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuLXNvZnQtc3VjY2Vzc1wiXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHByaW50UGFnZSgpfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICBQcmludFxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcmQtYm9keVwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBzcGFjZS1iZXR3ZWVuIHAxNlwiPlxuICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnRuLXN1Y2Nlc3NcIlxuICAgICAgICAgICAgICBvbkNsaWNrPXtvcGVuUG9wdXBIYW5kbGVyfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICBBZGQgVXNlclxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPFRhYmxlV3JhcHBlcj5cbiAgICAgICAgICB7c3RhdHVzTXNnICYmIDxBbGVydFdyYXBwZXIgY2xhc3NOYW1lPVwiYWxlcnQgYWxlcnQtbm9ybWFsXCI+e3N0YXR1c01zZ308L0FsZXJ0V3JhcHBlcj59XG4gICAgICAgICAgICA8dGFibGVcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGFibGVcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgPHRoPklkPC90aD5cbiAgICAgICAgICAgICAgICAgIDx0aD5Db21wYW55IE5hbWU8L3RoPlxuICAgICAgICAgICAgICAgICAgPHRoPk1vYmlsZTwvdGg+XG4gICAgICAgICAgICAgICAgICA8dGg+RW1haWw8L3RoPlxuICAgICAgICAgICAgICAgICAgPHRoPlJvbGU8L3RoPlxuICAgICAgICAgICAgICAgICAgPHRoPldhbGxldDwvdGg+XG4gICAgICAgICAgICAgICAgICA8dGg+SG9sZCBBbW91bnQ8L3RoPlxuICAgICAgICAgICAgICAgICAgPHRoPlN0YXR1czwvdGg+XG4gICAgICAgICAgICAgICAgICA8dGg+QWN0aW9uPC90aD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICA8L3RoZWFkPlxuXG4gICAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgICB7dXNlckRhdGEgJiYgQXJyYXkuaXNBcnJheSh1c2VyRGF0YSlcbiAgICAgICAgICAgICAgICAgID8gdXNlckRhdGEubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBsZXQgdXNlckNsYXNzID0gXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0ucm9sZSAmJiByb2xlTWFwcGluZ1tpdGVtLnJvbGVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgdXNlckNsYXNzID0gcm9sZU1hcHBpbmdbaXRlbS5yb2xlXVxuICAgICAgICAgICAgICAgICAgICAgICAgLnRvTG93ZXJDYXNlKClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKFwiIFwiLCBcIi1cIik7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBsZXQgc3RhdHVzID0gaXRlbS5pc0FjdGl2ZTtcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgIDx0ciBrZXk9e2l0ZW0udXNlck5hbWV9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkPntpbmRleCArIDF9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57YCR7aXRlbS5maXJzdE5hbWV9ICR7aXRlbS5sYXN0TmFtZX1gfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+e2l0ZW0udXNlck5hbWV9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57aXRlbS5lbWFpbH08L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT17dXNlckNsYXNzfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAge3JvbGVNYXBwaW5nW2l0ZW0ucm9sZV0gfHwgXCJOQVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgUnMuIHtpdGVtLnVzZXJCYWxhbmNlIHx8IFwiMFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICA8aVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMuaWNvbkNvbnRhaW5lcn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJpY29uLWluZm9cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPVwiU2hvdyBUcmFuc2FjdGlvbnNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNob3dUcmFuc2FjdGlvbkhhbmRsZXIoaXRlbSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgID48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgey8qIDx0ZCBjbGFzc05hbWU9XCJkb25lXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtpdGVtLmlzQWN0aXZlID09IFwiWVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcIkFjdGl2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcIkluIEFjdGl2ZVwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4gKi99XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtpdGVtLmhvbGRCYWxhbmNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcIlJzLlwiICsgaXRlbS5ob2xkQmFsYW5jZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogXCItXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkPntgJHtpdGVtLmlzQWN0aXZlID09IFwiTlwiID8gXCJJbmFjdGl2ZVwiIDogXCJBY3RpdmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICB9YH08L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiBcInJvd1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuaWNvbkNvbnRhaW5lcn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImljb24tcGVuY2lsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZGl0Q2xpY2tIYW5kbGVyKGl0ZW0udXNlck5hbWUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgY3Vyc29yOiBcInBvaW50ZXJcIiB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT1cInVwZGF0ZSB1c2VyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qIHwgKi99XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT17c3R5bGVzLmljb25Db250YWluZXJ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJpY29uLWtleVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVybWlzc2lvbkNsaWNrSGFuZGxlcihpdGVtLnVzZXJOYW1lKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPVwiTWFuYWdlIFBlcm1pc3Npb25zXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgY3Vyc29yOiBcInBvaW50ZXJcIiB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7LyogfCAqL31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuaWNvbkNvbnRhaW5lcn0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJpY29uLXBsdXNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT1cIkFkZCBGdW5kXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic3VjY2Vzc2Z1bFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZG1pbkZ1bmRGb3JtSGFuZGxlcihpdGVtLnVzZXJOYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qIHwgKi99XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRvb2x0aXBXcmFwcGVyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17c3R5bGVzLmJ1bGJDb250YWluZXJbc3RhdHVzXX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZVVzZXJTdGF0dXMoaXRlbS51c2VyTmFtZSwgc3RhdHVzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImljb24tYnVsYlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7IGZvbnRXZWlnaHQ6IFwiYm9sZFwiIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPXtgJHtpdGVtLmlzQWN0aXZlID09IFwiTlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBcIkFjdGl2ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcIkluYWN0aXZlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9YH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48L2k+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt1c2VyU3RhdHVzLnVzZXJOYW1lID09IGl0ZW0udXNlck5hbWUgJiYgaXNUb29sdGlwICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0b29sdGlwIHRvb2x0aXAtc3VjY2Vzc1wiPnt1c2VyU3RhdHVzPy5tc2d9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Ub29sdGlwV3JhcHBlcj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgOiBcIlwifVxuICAgICAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICAgICAgPC90YWJsZT5cbiAgICAgICAgICA8L1RhYmxlV3JhcHBlcj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuXG4gICAgICB7YWRtaW5Gb3JtRGF0YSA/IChcbiAgICAgICAgPEFkbWluRnVuZEZvcm1cbiAgICAgICAgICB1c2VySWQ9e2FkbWluRm9ybURhdGF9XG4gICAgICAgICAgY2xvc2VBZG1pbkZ1bmRGb3JtPXtjbG9zZUFkbWluRnVuZFBvcFVwSGFuZGxlcn1cbiAgICAgICAgICBzZXRTdGF0dXNNc2c9e3NldFN0YXR1c01zZ31cbiAgICAgICAgICBzdWNjZXNzQ2FsbEJhY2s9e2ZldGNoVXNlcnNEYXRhfVxuICAgICAgICAvPlxuICAgICAgKSA6IChcbiAgICAgICAgXCJcIlxuICAgICAgKX1cbiAgICAgIHtpc1BvcHVwVmlzaWJsZSA/IChcbiAgICAgICAgPEFkZFVzZXJGb3JtXG4gICAgICAgICAgY2xvc2VQb3BVcEhhbmRsZXI9e2Nsb3NlUG9wVXBIYW5kbGVyfVxuICAgICAgICAgIGZldGNoVXNlcnNEYXRhPXtmZXRjaFVzZXJzRGF0YX1cbiAgICAgICAgICBwcm9wcz17cHJvcHN9XG4gICAgICAgICAgZWRpdFVzZXJEYXRhPXtlZGl0VXNlckRhdGF9XG4gICAgICAgICAgdXNlclRvQmVFZGl0PXt1c2VyVG9CZUVkaXR9XG4gICAgICAgICAgc2hvd1Bob25lTnVtYmVyRmllbGQ9e3Nob3dQaG9uZU51bWJlckZpZWxkfVxuICAgICAgICAvPlxuICAgICAgKSA6IChcbiAgICAgICAgXCJcIlxuICAgICAgKX1cblxuICAgICAge3RyYW5zYXRpb25Qb3B1cFZpc2libGUgPyAoXG4gICAgICAgIDxXYWxsZXREZXRhaWxzXG4gICAgICAgICAgdXNlcldhbGxldD17dXNlclRyYW5zYWN0aW9uRGV0YWlsc31cbiAgICAgICAgICBjbG9zZVRyYW5zYWN0aW9uSGFuZGxlcj17Y2xvc2VUcmFuc2FjdGlvbkhhbmRsZXJ9XG4gICAgICAgIC8+XG4gICAgICApIDogKFxuICAgICAgICBcIlwiXG4gICAgICApfVxuXG4gICAgICB7cGVybWlzc2lvbkRhdGEuaXNQb3B1cFZpc2libGUgPyAoXG4gICAgICAgIDxQZXJtaXNzaW9uRm9ybVxuICAgICAgICAgIGNsb3NlUG9wVXBIYW5kbGVyPXtjbG9zZVBlcm1pc3Npb25Qb3B1cH1cbiAgICAgICAgICB1c2VySWQ9e3Blcm1pc3Npb25EYXRhLnVzZXJJZH1cbiAgICAgICAgLz5cbiAgICAgICkgOiAoXG4gICAgICAgIFwiXCJcbiAgICAgICl9XG4gICAgPC8+XG4gICk7XG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoc3RhdGUpID0+IHtcbiAgcmV0dXJuIHtcbiAgICAuLi5zdGF0ZSxcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzKShVc2Vycyk7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIlJlcXVlc3QiLCJ1cmxzIiwicmVtb3ZlT3ZlcmxheSIsIkJ1dHRvbiIsIk1vZGFsV3JhcHBlciIsImluaXRpYWxGb3JtRGF0YSIsIk9iamVjdCIsImZyZWV6ZSIsImFkZHJlc3MxIiwiYWRkcmVzczIiLCJkb2IiLCJlbWFpbCIsImZpcnN0TmFtZSIsImxhbmRtYXJrIiwibGFuZ0tleSIsImxhc3ROYW1lIiwib3RwIiwicGhvbmVOdW1iZXIiLCJwaW5jb2RlIiwicXJDb2RlSWQiLCJyb2xlIiwidGVuYW50SWQiLCJ1c2VyTmFtZSIsIkFkZFVzZXJGb3JtIiwicHJvcHMiLCJlZGl0VXNlckRhdGEiLCJ1c2VyVG9CZUVkaXQiLCJjbG9zZVBvcFVwSGFuZGxlciIsImZldGNoVXNlcnNEYXRhIiwiZm9ybURhdGEiLCJ1cGRhdGVGb3JtRGF0YSIsImVkaXRGb3JtRGF0YSIsInVwZGF0ZUVkaXRGb3JtRGF0YSIsImVycm9ycyIsInVwZGF0ZUVycm9yIiwic3VjY2VzcyIsInVwZGF0ZVN1Y2Nlc3MiLCJoYW5kbGVDaGFuZ2UiLCJldmVudCIsInRhcmdldCIsIm5hbWUiLCJ2YWx1ZSIsInVwZGF0ZVVzZXIiLCJhcGkiLCJzdWNjZXNzSGFuZGxlciIsImVycm9ySGFuZGxlciIsInBvc3QiLCJsb2dpbiIsIkJBU0VfVVJMIiwiVXNlciIsIlVQREFURV9VU0VSIiwiZXJyb3IiLCJzdGF0dXMiLCJmaWVsZEVycm9ycyIsIkFycmF5IiwiZm9yRWFjaCIsIml0ZW0iLCJwdXNoIiwiZmllbGQiLCJtZXNzYWdlIiwibGVuZ3RoIiwid2luZG93Iiwic2Nyb2xsVG8iLCJkYXRhIiwibXNnIiwic3VibWl0Rm9ybUhhbmRsZXIiLCJwcmV2ZW50RGVmYXVsdCIsIkNSRUFURV9ORVdfVVNFUiIsImVycm9ySFRNTCIsImVycm9yU3R5bGVzIiwic3VjY2Vzc1N0eWxlcyIsIm1hcCIsInZhbCIsImNvbG9yIiwiZm9udFNpemUiLCJtYXJnaW5Ub3AiLCJjb25zb2xlIiwibG9nIiwiZ2V0QXV0aFRva2VuIiwiYXhpb3MiLCJQZXJtaXNzaW9uRm9ybSIsInVzZXJJZCIsInBlcm1pc3Npb25zIiwic2V0UGVybWlzc2lvbnMiLCJzZXRNZXNzYWdlIiwiZmV0Y2hQZXJtaXNzaW9ucyIsInJlcyIsImFjdGl2ZVBlcm1pc3Npb25zIiwib3B0aW9ucyIsImhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwicHJvbWlzZTEiLCJnZXQiLCJHRVRfQUxMX1BFUk1JU0lTU0lPTlMiLCJwcm9taXNlMiIsIk1BTkFHRV9VU0VSX1BFUk1JU1NJT05TIiwiYWxsIiwidGhlbiIsInNwcmVhZCIsInJlc3BvbnNlcyIsImFsbFBlcm1pc3Npb25zIiwiaGFuZGxlQ2xpY2siLCJwZXJtS2V5IiwiYWN0aXZlUGVybWlzc2lvbnNDb3B5IiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiY2hlY2tlZCIsImZpbHRlcmVkQXJyYXkiLCJmaWx0ZXIiLCJuZXdQZXJtaXNzaW9ucyIsImtleXMiLCJrZXkiLCJjb25jYXQiLCJhZGRBcGlDb2RlIiwic3VibWl0U3VjY2VzcyIsInN1Ym1pdEVycm9yIiwicGVybUtleXMiLCJpc0FycmF5IiwiaW5jbHVkZXMiLCJtYXJnaW5SaWdodCIsInJlcGxhY2UiLCJtYXJnaW4iLCJ0ZXh0QWxpZ24iLCJ1c2VSZWYiLCJBUElTIiwiQWRtaW5GdW5kRm9ybSIsImNsb3NlQWRtaW5GdW5kRm9ybSIsInNldFN0YXR1c01zZyIsInN1Y2Nlc3NDYWxsQmFjayIsImFtb3VudCIsInJlbWFyayIsImV3YWxsZXRUeXBlIiwic2V0Rm9ybURhdGEiLCJ3YWxsZXRTZWxlY3QiLCJ3YWxsZXRBY3Rpb24iLCJjdXJyZW50IiwicmVxdWVzdCIsIndhbGxldEFQSSIsIldhbGxldCIsIk1BTkFHRV9XQUxMRVQiLCJwYXJzZUludCIsInJlc3BvbnNlIiwicHJldlN0YXRlIiwiV2FsbGV0RGV0YWlscyIsImNsb3NlVHJhbnNhY3Rpb25IYW5kbGVyIiwidXNlcldhbGxldCIsImZldGNoV2FsbGV0RGV0YWlscyIsIlZJRVdfVFJBTlNBQ1RJT05TIiwic2V0T2J0YWluZWRXYWxsZXREZXRhaWxzIiwib2J0YWluZWRXYWxsZXREZXRhaWxzIiwiZGV0YWlscyIsImVudHJpZXMiLCJmZXRjaFVzZXJzTGlzdCIsIlNpZGVCYXIiLCJCcmVhZENydW1iIiwiY29ubmVjdCIsInByaW50UGFnZSIsImFkZE92ZXJsYXkiLCJBbGVydFdyYXBwZXIiLCJUYWJsZVdyYXBwZXIiLCJUb29sdGlwV3JhcHBlciIsInJvbGVNYXBwaW5nIiwiUFRNX1ZFTkRPUiIsIlBUTV9BRE1JTiIsIlBUTV9TVUJfQURNSU4iLCJzdHlsZXMiLCJpY29uQ29udGFpbmVyIiwicGFkZGluZyIsImN1cnNvciIsImJ1bGJDb250YWluZXIiLCJOIiwiWSIsIlVzZXJzIiwiaXNQb3B1cFZpc2libGUiLCJoYW5kbGVQb3BVcCIsInVzZXJTdGF0dXMiLCJzZXRVc2VyU3RhdHVzIiwidHJhbnNhdGlvblBvcHVwVmlzaWJsZSIsInNldFRyYW5zYXRpb25Qb3B1cFZpc2libGUiLCJ1c2VyVHJhbnNhY3Rpb25EZXRhaWxzIiwic2V0VXNlclRyYW5zYWN0aW9uRGV0YWlscyIsInNob3dQaG9uZU51bWJlckZpZWxkIiwic2V0U2hvd1Bob25lTnVtYmVyRmllbGQiLCJzdGF0dXNNc2ciLCJzZXRVc2VySWQiLCJzZXRFZGl0VXNlckRhdGEiLCJwZXJtaXNzaW9uRGF0YSIsInNldFBlcm1pc3Npb25EYXRhIiwiYWRtaW5Gb3JtRGF0YSIsInNldEFkbWluRm9ybURhdGEiLCJpc1Rvb2x0aXAiLCJzZXRUb29sdGlwIiwiZGlzcGF0Y2giLCJzaG93VHJhbnNhY3Rpb25IYW5kbGVyIiwiZWRpdENsaWNrSGFuZGxlciIsIkVESVRfVVNFUiIsImFkbWluRnVuZEZvcm1IYW5kbGVyIiwicGVybWlzc2lvbkNsaWNrSGFuZGxlciIsIm9wZW5Qb3B1cEhhbmRsZXIiLCJkb2N1bWVudCIsImJvZHkiLCJjbGFzc0xpc3QiLCJhZGQiLCJoYW5kbGVVc2VyU3RhdHVzIiwiY3VyZW50U3RhdHVzIiwicGFyYW1zIiwicHV0IiwiTUFOQUdFX1VTRVJfU1RBVFVTIiwiY2xvc2VBZG1pbkZ1bmRQb3BVcEhhbmRsZXIiLCJyZW1vdmUiLCJjbG9zZVBlcm1pc3Npb25Qb3B1cCIsInVzZXJzIiwidXNlckRhdGEiLCJ1c2Vyc0xpc3QiLCJpc0FjdGl2ZSIsInNldFRpbWVvdXQiLCJpbmRleCIsInVzZXJDbGFzcyIsInRvTG93ZXJDYXNlIiwidXNlckJhbGFuY2UiLCJob2xkQmFsYW5jZSIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwiZm9udFdlaWdodCIsIm1hcFN0YXRlVG9Qcm9wcyIsInN0YXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9662\n");

/***/ })

}]);